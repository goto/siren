(self.webpackChunksiren=self.webpackChunksiren||[]).push([[2439],{1410:function(e,t,a){var n=a(7694),r=a(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://odpf.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"odpf",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0,switchConfig:{darkIcon:"\u263e",lightIcon:"\u2600\ufe0f"}},navbar:{title:"Siren",logo:{src:"img/logo.svg"},items:[{type:"doc",docId:"introduction",position:"left",label:"Docs"},{to:"/blog",label:"Blog",position:"left"},{to:"/help",label:"Help",position:"left"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/odpf/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[{title:"Products",items:[{label:"Meteor",href:"https://github.com/odpf/meteor"},{label:"Firehose",href:"https://github.com/odpf/firehose"},{label:"Raccoon",href:"https://github.com/odpf/raccoon"},{label:"Dagger",href:"https://odpf.github.io/dagger/"}]},{title:"Resources",items:[{label:"Docs",to:"/docs/introduction"},{label:"Blog",to:"/blog"},{label:"Help",to:"/help"}]},{title:"Community",items:[{label:"Slack",href:"https://bit.ly/2RzPbtn"},{label:"GitHub",href:"https://github.com/odpf/siren"}]}],copyright:"Copyright \xa9 2022-"+(new Date).getFullYear()+" ODPF"},prism:{theme:n,darkTheme:r},gtag:{trackingID:"G-XXX"},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/odpf/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}},presets:[["@docusaurus/preset-classic",{docs:{showLastUpdateAuthor:!0,showLastUpdateTime:!0,sidebarPath:6679,editUrl:"https://github.com/odpf/siren/edit/master/docs/"},blog:{showReadingTime:!0,editUrl:"https://github.com/odpf/siren/edit/master/docs/blog/"},theme:{customCss:[5308,2295]}}]]}},8215:function(e,t,a){"use strict";var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},5064:function(e,t,a){"use strict";a.d(t,{Z:function(){return p}});var n=a(7294),r=a(9443);var l=function(){var e=(0,n.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=a(6010),o="tabItem_vU9c",s="tabItemActive_cw6a";var p=function(e){var t,a=e.lazy,r=e.block,p=e.defaultValue,u=e.values,c=e.groupId,d=e.className,m=n.Children.toArray(e.children),g=null!=u?u:m.map((function(e){return{value:e.props.value,label:e.props.label}})),b=null!=p?p:null==(t=m.find((function(e){return e.props.default})))?void 0:t.props.value,h=l(),f=h.tabGroupChoices,y=h.setTabGroupChoices,k=(0,n.useState)(b),v=k[0],N=k[1],T=[];if(null!=c){var C=f[c];null!=C&&C!==v&&g.some((function(e){return e.value===C}))&&N(C)}var w=function(e){var t=e.currentTarget,a=T.indexOf(t),n=g[a].value;N(n),null!=c&&(y(c,n),setTimeout((function(){var e,a,n,r,l,i,o,p;(e=t.getBoundingClientRect(),a=e.top,n=e.left,r=e.bottom,l=e.right,i=window,o=i.innerHeight,p=i.innerWidth,a>=0&&l<=p&&r<=o&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},I=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=T.indexOf(e.target)+1;a=T[n]||T[0];break;case"ArrowLeft":var r=T.indexOf(e.target)-1;a=T[r]||T[T.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},d)},g.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":v===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:I,onFocus:w,onClick:w},null!=a?a:t)}))),a?(0,n.cloneElement)(m.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},m.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},6679:function(e){e.exports={docsSidebar:["introduction",{type:"category",label:"Tour",items:["tour/introduction","tour/startup_siren_server","tour/registering_provider","tour/registering_receivers","tour/sending_notifications_to_receiver","tour/configuring_provider_alerting_rules","tour/subscribing_notifications"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/schema"]},{type:"category",label:"Guides",items:["guides/overview","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/deployment"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/receiver","contribute/provider","contribute/release"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/receiver","reference/cli"]}]}},2160:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return m},metadata:function(){return g},toc:function(){return b},apiVersion:function(){return h},defaultHost:function(){return f},default:function(){return k}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=a(5064),o=a(8215),s=a(6213),p=a(1410),u=a.n(p),c=["components"],d={},m="Template",g={unversionedId:"guides/template",id:"guides/template",isDocsHomePage:!1,title:"Template",description:"export const apiVersion = siteConfig.customFields.apiVersion",source:"@site/docs/guides/template.md",sourceDirName:"guides",slug:"/guides/template",permalink:"/siren/docs/guides/template",editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/guides/template.md",tags:[],version:"current",lastUpdatedBy:"Ravi Suhag",lastUpdatedAt:1666359878,formattedLastUpdatedAt:"10/21/2022",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Rule",permalink:"/siren/docs/guides/rule"},next:{title:"Alert History",permalink:"/siren/docs/guides/alert_history"}},b=[{value:"API interface",id:"api-interface",children:[{value:"Template creation/update",id:"template-creationupdate",children:[]},{value:"Terminology of the request body",id:"terminology-of-the-request-body",children:[]},{value:"Fetching a template",id:"fetching-a-template",children:[]},{value:"Deleting a template",id:"deleting-a-template",children:[]}]},{value:"CLI interface",id:"cli-interface",children:[{value:"Terminology",id:"terminology",children:[]}]}],h=u().customFields.apiVersion,f=u().customFields.defaultHost,y={toc:b,apiVersion:h};function k(e){var t=e.components,a=(0,r.Z)(e,c);return(0,l.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"template"},"Template"),(0,l.kt)("p",null,"Templates concept in Siren is used for abstraction. The usage is versatile enough to be used to abstract out rules and notification format. It utilises ",(0,l.kt)("a",{parentName:"p",href:"https://golang.org/pkg/text/template/"},"go-templates")," to provide data-driven templates for generating textual output. The template delimiter used is ",(0,l.kt)("inlineCode",{parentName:"p"},"[[")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"]]"),"."),(0,l.kt)("p",null,"One can create templates using either HTTP APIs or CLI."),(0,l.kt)("h2",{id:"api-interface"},"API interface"),(0,l.kt)("h3",{id:"template-creationupdate"},"Template creation/update"),(0,l.kt)("p",null,"Templates can be created using Siren APIs. The below snippet describes an example."),(0,l.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren template upsert --file template.yaml\n"))),(0,l.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request PUT\n  --url ",f,"/",h,'/templates\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "CPU",\n    "body": "- alert: CPUHighWarning\n  expr: avg by (host) (cpu_usage_user{cpu="cpu-total"}) > [[.warning]]\n  for: \'[[.for]]\'\n  labels:\n    severity: WARNING\n    team: \'[[ .team ]]\'\n  annotations:\n    dashboard: https://example.com\n    description: CPU has been above [[.warning]] for last [[.for]] {{ $labels.host }}\n- alert: CPUHighCritical\n  expr: avg by (host) (cpu_usage_user{cpu="cpu-total"}) > [[.critical]]\n  for: \'[[.for]]\'\n  labels:\n    severity: CRITICAL\n    team: \'[[ .team ]]\'\n  annotations:\n    dashboard: example.com\n    description: CPU has been above [[.critical]] for last [[.for]] {{ $labels.host }}\n",\n    "tags": [\n        "firehose",\n        "dagger"\n    ],\n    "variables": [\n        {\n            "name": "team",\n            "type": "string",\n            "default": "odpf",\n            "description": "Name of the team that owns the deployment"\n        },\n        {\n            "name": "for",\n            "type": "string",\n            "default": "10m",\n            "description": "For eg 5m, 2h; Golang duration format"\n        },\n        {\n            "name": "warning",\n            "type": "int",\n            "default": "85",\n            "description": ""\n        },\n        {\n            "name": "critical",\n            "type": "int",\n            "default": "95",\n            "description": ""\n        }\n    ]\n}\''))),(0,l.kt)("h3",{id:"terminology-of-the-request-body"},"Terminology of the request body"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Term"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example/Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the template"),(0,l.kt)("td",{parentName:"tr",align:null},"CPUHigh")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Body"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of rule body. The body can be templatized in go template format."),(0,l.kt)("td",{parentName:"tr",align:null},"See example above")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Variables"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of variables that were templatized in the body with their data type, default value and description."),(0,l.kt)("td",{parentName:"tr",align:null},"See example above")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Tags"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of resources/applications that can utilize this template"),(0,l.kt)("td",{parentName:"tr",align:null},"VM")))),(0,l.kt)("p",null,"The response body will look like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 38,\n  "CreatedAt": "2021-04-29T16:20:48.061862+05:30",\n  "UpdatedAt": "2021-04-29T16:22:19.978837+05:30",\n  "name": "CPU",\n  "body": "- alert: CPUHighWarning\\n  expr: avg by (host) (cpu_usage_user{cpu=\\"cpu-total\\"}) > [[.warning]]\\n  for: \'[[.for]]\'\\n  labels:\\n    severity: WARNING\\n    team: \'[[ .team ]]\'\\n  annotations:\\n    dashboard: https://example.com\\n    description: CPU has been above [[.warning]] for last [[.for]] {{ $labels.host }}\\n- alert: CPUHighCritical\\n  expr: avg by (host) (cpu_usage_user{cpu=\\"cpu-total\\"}) > [[.critical]]\\n  for: \'[[.for]]\'\\n  labels:\\n    severity: CRITICAL\\n    team: \'[[ .team ]]\'\\n  annotations:\\n    dashboard: example.com\\n    description: CPU has been above [[.critical]] for last [[.for]] {{ $labels.host }}\\n",\n  "tags": ["firehose", "dagger"],\n  "variables": [\n    {\n      "name": "team",\n      "type": "string",\n      "default": "odpf",\n      "description": "Name of the team that owns the deployment"\n    },\n    {\n      "name": "for",\n      "type": "string",\n      "default": "10m",\n      "description": "For eg 5m, 2h; Golang duration format"\n    },\n    {\n      "name": "warning",\n      "type": "int",\n      "default": "85",\n      "description": ""\n    },\n    {\n      "name": "critical",\n      "type": "int",\n      "default": "95",\n      "description": ""\n    }\n  ]\n}\n')),(0,l.kt)("h3",{id:"fetching-a-template"},"Fetching a template"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Fetching by Name")),(0,l.kt)("p",null,"Here is an example to fetch a template using name."),(0,l.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren template view cpu\n"))),(0,l.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET\n  --url ",f,"/",h,"/templates/cpu"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Fetching by Tags")),(0,l.kt)("p",null,"Here is an example to fetch a templates matching the tag."),(0,l.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren template list --tag firehose\n"))),(0,l.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET\n  --url ",f,"/",h,"/templates?tag=firehose"))),(0,l.kt)("h3",{id:"deleting-a-template"},"Deleting a template"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"DELETE /v1beta1/templates/cpu HTTP/1.1\nHost: localhost:3000\n")),(0,l.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren template delete cpu\n"))),(0,l.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request DELETE\n  --url ",f,"/",h,"/templates/cpu"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Updating a template via API will not upload the associated rules.")),(0,l.kt)("h2",{id:"cli-interface"},"CLI interface"),(0,l.kt)("p",null,"With CLI, you will need a YAML file in the below specified format to create/update templates. The CLI calls Siren\nservice templates APIs in turn."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example template file")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v2\ntype: template\nname: CPU\nbody:\n  - alert: CPUWarning\n    expr: avg by (host) (cpu_usage_user{cpu="cpu-total"}) > [[.warning]]\n    for: "[[.for]]"\n    labels:\n      severity: WARNING\n    annotations:\n      description: CPU has been above [[.warning]] for last [[.for]] {{ $labels.host }}\n  - alert: CPUCritical\n    expr: avg by (host) (cpu_usage_user{cpu="cpu-total"}) > [[.critical]]\n    for: "[[.for]]"\n    labels:\n      severity: CRITICAL\n    annotations:\n      description: CPU has been above [[.critical]] for last [[.for]] {{ $labels.host }}\nvariables:\n  - name: for\n    type: string\n    default: 10m\n    description: For eg 5m, 2h; Golang duration format\n  - name: warning\n    type: int\n    default: 80\n  - name: critical\n    type: int\n    default: 90\ntags:\n  - systems\n')),(0,l.kt)("p",null,"In the above example, we are using one template to define rules of two severity labels viz WARNING and CRITICAL. Here we\nhave made 3 templates variables ",(0,l.kt)("inlineCode",{parentName:"p"},"for"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"warning")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"critical")," which denote the appropriate alerting thresholds. They\nwill be given a value while actual rule(alert) creating."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"siren template upload cpu_template.yaml\n")),(0,l.kt)("h3",{id:"terminology"},"Terminology"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Term"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example/Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"API Version"),(0,l.kt)("td",{parentName:"tr",align:null},"Which API to use to parse the YAML file"),(0,l.kt)("td",{parentName:"tr",align:null},"v2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Type"),(0,l.kt)("td",{parentName:"tr",align:null},"Describes the type of object represented by YAML file"),(0,l.kt)("td",{parentName:"tr",align:null},"template")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the template"),(0,l.kt)("td",{parentName:"tr",align:null},"CPUHigh")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Body"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of rule body. The body can be templatized in go template format."),(0,l.kt)("td",{parentName:"tr",align:null},"See example file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Variables"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of variables that were templatized in the body with their data type, default value and description."),(0,l.kt)("td",{parentName:"tr",align:null},"See example file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Tags"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of resources/applications that can utilize this template"),(0,l.kt)("td",{parentName:"tr",align:null},"VM")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"It's suggested to always provide default value for the templated variables."),(0,l.kt)("li",{parentName:"ol"},"Updating a template used by rules via CLI will update all associated rules.")))}k.isMDXComponent=!0},3618:function(e,t,a){"use strict";a.r(t);t.default={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:function(e,t,a){"use strict";a.r(t);t.default={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);