(self.webpackChunksiren=self.webpackChunksiren||[]).push([[667],{1410:(e,t,a)=>{const n=a(7694),r=a(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://goto.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"goto",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},presets:[["@docusaurus/preset-classic",{docs:{sidebarPath:6679,editUrl:"https://github.com/goto/siren/edit/master/docs/",sidebarCollapsed:!0,breadcrumbs:!1},blog:!1,theme:{customCss:[5308,2295]},gtag:{trackingID:"G-EPXDLH6V72"}}]],themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0},navbar:{title:"Siren",logo:{src:"img/logo.svg"},hideOnScroll:!0,items:[{type:"doc",docId:"introduction",position:"right",label:"Docs"},{to:"docs/support",label:"Support",position:"right"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/goto/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[]},prism:{theme:n,darkTheme:r},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/goto/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}}}},5162:(e,t,a)=>{"use strict";a.d(t,{Z:()=>o});var n=a(7294),r=a(4334);const i="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},t)}},5488:(e,t,a)=>{"use strict";a.d(t,{Z:()=>m});var n=a(3117),r=a(7294),i=a(4334),o=a(2389),l=a(7392),s=a(7094),c=a(2466);const p="tabList__CuJ",u="tabItem_LNqP";function d(e){var t;const{lazy:a,block:o,defaultValue:d,values:m,groupId:k,className:h}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,l.l)(b,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===d?d:d??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:N}=(0,s.U)(),[w,C]=(0,r.useState)(f),_=[],{blockElementScrollPositionUntilNextRender:S}=(0,c.o5)();if(null!=k){const e=v[k];null!=e&&e!==w&&b.some((t=>t.value===e))&&C(e)}const T=e=>{const t=e.currentTarget,a=_.indexOf(t),n=b[a].value;n!==w&&(S(t),C(n),null!=k&&N(k,String(n)))},x=e=>{var t;let a=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const t=_.indexOf(e.currentTarget)+1;a=_[t]??_[0];break}case"ArrowLeft":{const t=_.indexOf(e.currentTarget)-1;a=_[t]??_[_.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},h)},b.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>_.push(e),onKeyDown:x,onClick:T},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":w===t})}),a??t)}))),a?(0,r.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},6679:e=>{e.exports={docsSidebar:["introduction","use_cases","installation",{type:"category",label:"Tour",items:["tour/introduction","tour/setup_server","tour/1sending_notifications_overview","tour/2alerting_rules_subscriptions_overview"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/notification","concepts/glossary"]},{type:"category",label:"Guides",items:["guides/overview","guides/deployment","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/workers","guides/job"]},{type:"category",label:"Providers",items:["providers/cortexmetrics"]},{type:"category",label:"Receivers",items:["receivers/slack","receivers/pagerduty","receivers/http","receivers/file"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/cli"]},{type:"category",label:"Extend",items:["extend/adding_new_provider","extend/adding_new_receiver"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/release"]}]}},1732:(e,t,a)=>{"use strict";a.r(t),a.d(t,{apiVersion:()=>h,assets:()=>m,contentTitle:()=>u,default:()=>y,defaultHost:()=>g,frontMatter:()=>p,metadata:()=>d,toc:()=>k});var n=a(3117),r=(a(7294),a(3905)),i=a(5488),o=a(5162),l=a(6066),s=a(1410),c=a.n(s);const p={},u="Slack",d={unversionedId:"receivers/slack",id:"receivers/slack",title:"Slack",description:"|||",source:"@site/docs/receivers/slack.md",sourceDirName:"receivers",slug:"/receivers/slack",permalink:"/siren/docs/receivers/slack",draft:!1,editUrl:"https://github.com/goto/siren/edit/master/docs/docs/receivers/slack.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"CortexMetrics",permalink:"/siren/docs/providers/cortexmetrics"},next:{title:"PagerDuty",permalink:"/siren/docs/receivers/pagerduty"}},m={},k=[{value:"Initializing a Slack App",id:"initializing-a-slack-app",level:2},{value:"Configurations in API",id:"configurations-in-api",level:2},{value:"Configurations Stored in DB",id:"configurations-stored-in-db",level:2},{value:"Subscription",id:"subscription",level:2},{value:"Message Payload",id:"message-payload",level:2},{value:"Contract",id:"contract",level:3},{value:"Default Alert Template",id:"default-alert-template",level:3}],h=c().customFields.apiVersion,g=c().customFields.defaultHost,b={toc:k,apiVersion:h};function y(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,n.Z)({},b,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"slack"},"Slack"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slack"))))),(0,r.kt)("p",null,"A Slack receiver in Siren tied to a Slack workspace. The implementation uses ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/slack-go/slack"},"slack-go")," library to send notification to a ",(0,r.kt)("a",{parentName:"p",href:"#initializing-a-slack-app"},"Slack app"),". This Slack app must be installed in the required workspaces and added to the required channels. Siren helps with the installation flow by automating the exchanging code for access token ",(0,r.kt)("a",{parentName:"p",href:"https://api.slack.com/legacy/oauth#authenticating-users-with-oauth__the-oauth-flow"},"flow"),"."),(0,r.kt)("h2",{id:"initializing-a-slack-app"},"Initializing a Slack App"),(0,r.kt)("p",null,"Here is the list of actions one need to take to attach a Slack app to Siren. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a Slack app and configure these permissions. Visit ",(0,r.kt)("a",{parentName:"li",href:"https://api.slack.com/apps"},"this"),". If you already have an app, make sure permissions mentioned below are there.",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},"channels:read\nchat:write\ngroups:read\nim:read\nteam:read\nusers:read\nusers:read.email\n"))),(0,r.kt)("li",{parentName:"ol"},"Enable Distribution"),(0,r.kt)("li",{parentName:"ol"},"Setup a redirection server. You can use ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost")," as well. This must be a ",(0,r.kt)("inlineCode",{parentName:"li"},"https")," server. Slack will call this server once we install the app in any workspace."),(0,r.kt)("li",{parentName:"ol"},"Install your app to a workspace. Visit ",(0,r.kt)("inlineCode",{parentName:"li"},"Manage Distribution")," section on the App Dashboard. Click the ",(0,r.kt)("inlineCode",{parentName:"li"},"Add to Slack")," Button."),(0,r.kt)("li",{parentName:"ol"},"This will prompt you to the OAuth Consent screen. Make sure you have selected the correct Slack Workspace by verifying the dropdown in the top-right corner. Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Allow"),"."),(0,r.kt)("li",{parentName:"ol"},"Copy the ",(0,r.kt)("inlineCode",{parentName:"li"},"code")," that you received from Slack redirection URL query params and use this as ",(0,r.kt)("inlineCode",{parentName:"li"},"auth_code")," inside ",(0,r.kt)("inlineCode",{parentName:"li"},"create receiver")," payload.")),(0,r.kt)("p",null,"In order to send Slack notifications via Siren API, you need to create its receiver.   To add a new slack receiver you need all credentials mentioned in this ",(0,r.kt)("a",{parentName:"p",href:"#configurations-in-api"},"configuration"),"."),(0,r.kt)("h2",{id:"configurations-in-api"},"Configurations in API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"configurations": {\n    "client_id": <string>,\n    "client_secret": <string>,\n    "auth_code": <string>\n}\n')),(0,r.kt)("h2",{id:"configurations-stored-in-db"},"Configurations Stored in DB"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"configurations": {\n    "token": <encrypted string>\n}\n')),(0,r.kt)("p",null,"Creating a slack receiver involves exchanging the auth code for a token with slack oAuth server. Siren will need the auth code, client id, client secret and optional label metadata."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren receiver create --file slack_receiver.yaml\n"))),(0,r.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",g,"/",h,'/receivers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "doc-slack-receiver",\n    "type": "slack",\n    "labels": {\n        "team": "siren-devs"\n    },\n    "configurations": {\n        "client_id": "abcd",\n        "client_secret": "xyz",\n        "auth_code": "123"\n    }\n}\''))),(0,r.kt)("p",null,"On success, this will store the encrypted app token for that particular slack workspace and use it for sending out notifications."),(0,r.kt)("h2",{id:"subscription"},"Subscription"),(0,r.kt)("p",null,"Slack has additional ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionConfig")," where user could routes the notification to a specific channel or individual in a workspace. Here is the subscription config."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"configurations": {\n    "channel_name": <string>,\n    "channel_type": <string>\n}\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"channel_type")," has two possible enum values ",(0,r.kt)("inlineCode",{parentName:"p"},"channel")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"user"),". The default value of this is ",(0,r.kt)("inlineCode",{parentName:"p"},"channel"),". If ",(0,r.kt)("inlineCode",{parentName:"p"},"channel_type")," is channel, ",(0,r.kt)("inlineCode",{parentName:"p"},"channel_name")," should be a slack channel handle in the workspace e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"#gotocompany-critical"),". If one wants to send notification to an individual, ",(0,r.kt)("inlineCode",{parentName:"p"},"channel_type")," needs to be ",(0,r.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"channel_name")," needs to be populated with slack user's e-mail e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"user1@gotocompany.com"),"."),(0,r.kt)("h2",{id:"message-payload"},"Message Payload"),(0,r.kt)("h3",{id:"contract"},"Contract"),(0,r.kt)("p",null,"Payload format of slack needs to follow ",(0,r.kt)("a",{parentName:"p",href:"https://api.slack.com/methods/chat.postMessage"},"slack chat.postMessage API")," contract."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"channel: <string>\ntext: <string>\nusername: <string>\nicon_emoji: <string>\nicon_url: <string>\nlink_names: <boolean>\nattachments:\n  - <key1>: <any>\n    <key2>: <any>\n  - <key3>: <any>\n    <key4>: <any>\n    .\n    .\n")),(0,r.kt)("h3",{id:"default-alert-template"},"Default Alert Template"),(0,r.kt)("p",null,"Siren has a slack default notification ",(0,r.kt)("a",{target:"_blank",href:a(410).Z},"template")," used by all alert notifications."))}y.isMDXComponent=!0},410:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n});const n=a.p+"assets/files/default_alert_template_body-d865b56363471a2d45e7a21b65b110c3.goyaml"},3618:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>n});const n={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>n});const n={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);