(self.webpackChunksiren=self.webpackChunksiren||[]).push([[268],{1410:(e,t,r)=>{const n=r(7694),i=r(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://odpf.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"odpf",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},presets:[["@docusaurus/preset-classic",{docs:{sidebarPath:6679,editUrl:"https://github.com/odpf/siren/edit/master/docs/",sidebarCollapsed:!0,breadcrumbs:!1},blog:!1,theme:{customCss:[5308,2295]},gtag:{trackingID:"G-EPXDLH6V72"}}]],themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0},navbar:{title:"Siren",logo:{src:"img/logo.svg"},hideOnScroll:!0,items:[{type:"doc",docId:"introduction",position:"right",label:"Docs"},{to:"docs/support",label:"Support",position:"right"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/odpf/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[]},prism:{theme:n,darkTheme:i},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/odpf/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}}}},5162:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(7294),i=r(4334);const a="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,o),hidden:r},t)}},5488:(e,t,r)=>{"use strict";r.d(t,{Z:()=>m});var n=r(3117),i=r(7294),a=r(4334),o=r(2389),s=r(7392),l=r(7094),c=r(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var t;const{lazy:r,block:o,defaultValue:p,values:m,groupId:v,className:g}=e,h=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??h.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),b=(0,s.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===p?p:p??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:w}=(0,l.U)(),[N,_]=(0,i.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,c.o5)();if(null!=v){const e=k[v];null!=e&&e!==N&&f.some((t=>t.value===e))&&_(e)}const C=e=>{const t=e.currentTarget,r=T.indexOf(t),n=f[r].value;n!==N&&(x(t),_(n),null!=v&&w(v,String(n)))},I=e=>{var t;let r=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;r=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;r=T[t]??T[T.length-1];break}}null==(t=r)||t.focus()};return i.createElement("div",{className:(0,a.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},g)},f.map((e=>{let{value:t,label:r,attributes:o}=e;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:I,onClick:C},o,{className:(0,a.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":N===t})}),r??t)}))),r?(0,i.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,o.Z)();return i.createElement(p,(0,n.Z)({key:String(t)},e))}},6679:e=>{e.exports={docsSidebar:["introduction","use_cases","installation",{type:"category",label:"Tour",items:["tour/introduction","tour/setup_server","tour/1sending_notifications_overview","tour/2alerting_rules_subscriptions_overview"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/notification","concepts/glossary"]},{type:"category",label:"Guides",items:["guides/overview","guides/deployment","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/workers","guides/job"]},{type:"category",label:"Providers",items:["providers/cortexmetrics"]},{type:"category",label:"Receivers",items:["receivers/slack","receivers/pagerduty","receivers/http","receivers/file"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/cli"]},{type:"category",label:"Extend",items:["extend/adding_new_provider","extend/adding_new_receiver"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/release"]}]}},5370:(e,t,r)=>{"use strict";r.r(t),r.d(t,{apiVersion:()=>g,assets:()=>m,contentTitle:()=>d,default:()=>b,defaultHost:()=>h,frontMatter:()=>u,metadata:()=>p,toc:()=>v});var n=r(3117),i=(r(7294),r(3905)),a=r(5488),o=r(5162),s=r(6066),l=r(1410),c=r.n(l);const u={},d="1 Sending On-demand Notification",p={unversionedId:"tour/1sending_notifications_overview",id:"tour/1sending_notifications_overview",title:"1 Sending On-demand Notification",description:"This tour shows you how to send a notification to a receiver. You need to pick to which receiver you want send the notification to. If the receiver is not added in Siren yet, you could add one using siren receiver create. See receiver guide to explore more on how to work with siren receiver command.",source:"@site/docs/tour/1sending_notifications_overview.md",sourceDirName:"tour",slug:"/tour/1sending_notifications_overview",permalink:"/siren/docs/tour/1sending_notifications_overview",draft:!1,editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/tour/1sending_notifications_overview.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Setup Server",permalink:"/siren/docs/tour/setup_server"},next:{title:"2 Alerting Rules and Subscription",permalink:"/siren/docs/tour/2alerting_rules_subscriptions_overview"}},m={},v=[{value:"1.1 Register a Receiver",id:"11-register-a-receiver",level:2},{value:"1.2 Sending Notification to a Receiver",id:"12-sending-notification-to-a-receiver",level:2},{value:"What Next?",id:"what-next",level:2}],g=c().customFields.apiVersion,h=c().customFields.defaultHost,f={toc:v,apiVersion:g};function b(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"1-sending-on-demand-notification"},"1 Sending On-demand Notification"),(0,i.kt)("p",null,"This tour shows you how to send a notification to a receiver. You need to pick to which receiver you want send the notification to. If the receiver is not added in Siren yet, you could add one using ",(0,i.kt)("inlineCode",{parentName:"p"},"siren receiver create"),". See ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/guides/receiver"},"receiver guide")," to explore more on how to work with ",(0,i.kt)("inlineCode",{parentName:"p"},"siren receiver")," command."),(0,i.kt)("p",null,"Receiver in Siren is implemented as a plugin. Read ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/concepts/plugin"},"here")," to understand the concept about Plugin. There are several ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/concepts/plugin#receiver-plugin"},"types of receiver")," supported in Siren. In this tour we want to send a notification to a ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," receiver type. More detail about ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," receiver type can be found ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/receivers/file"},"here"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"We welcome all contributions to add new type of receiver plugins. See ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/extend/adding_new_receiver"},"Extend")," section to explore how to add a new type of receiver plugin to Siren")),(0,i.kt)("h2",{id:"11-register-a-receiver"},"1.1 Register a Receiver"),(0,i.kt)("p",null,"With ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," receiver type, all published notifications will be written to a file. Let's create a ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," receiver using Siren CLI."),(0,i.kt)("p",null,"Prepare receiver detail."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=receiver_1.yaml",title:"receiver_1.yaml"},"name: file-sink-1\ntype: file\nlabels:\n    key1: value1\n    key2: value2\nconfigurations:\n    url: ./out-file-sink1.json\n")),(0,i.kt)("p",null,"Register the receiver with this command."),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ siren receiver create --file receiver_1.yaml\n")),(0,i.kt)("p",null,"Once done, you will get a message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Receiver created with id: 1 \u2713\n"))),(0,i.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",h,"/",g,'/receivers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "file-sink-1",\n    "type": "file",\n    "labels": {\n        "key1": "value1",\n        "key2": "value2"\n    },\n    "configurations": {\n        "url": "./out-file-sink1.json"\n    }\n}\''))),(0,i.kt)("p",null,"You could verify the registered receiver by getting all receivers or get the new registered receiver by passing the ID. This command is to get all receivers in Siren."),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ siren receiver list\n"))),(0,i.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET\n  --url ",h,"/",g,"/receivers\n  "))),(0,i.kt)("p",null,"Or view a specific receiver with its ID with this command. For example the ID is ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ siren receiver view 1\n"))),(0,i.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET\n  --url ",h,"/",g,"/receivers/1\n  "))),(0,i.kt)("h2",{id:"12-sending-notification-to-a-receiver"},"1.2 Sending Notification to a Receiver"),(0,i.kt)("p",null,"In previous ",(0,i.kt)("a",{parentName:"p",href:"#11-register-a-receiver"},"part"),", we have already registered a receiver in Siren and got back the receiver ID. Now, we will send a notification to that receiver. If you are curious about how notification in Siren works, you can read the concepts ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/concepts/notification"},"here"),"."),(0,i.kt)("p",null,"To send a notification, we need to prepare the message payload as yaml to be sent by Siren CLI. The message is expected to be in a key-value format and placed under ",(0,i.kt)("inlineCode",{parentName:"p"},"payload.data"),"."),(0,i.kt)("p",null,"Prepare a message to send to receiver 1."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=message_file_1.yaml",title:"message_file_1.yaml"},"payload:\n    data:\n        text: this is notification to file 1\n        a_field: a_value\n        another_field: another_value\n")),(0,i.kt)("p",null,"Then we can run ",(0,i.kt)("inlineCode",{parentName:"p"},"receiver send")," command and target the receiver id ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," with flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--id"),"."),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ siren receiver send --id 1 --file message_file_1.yaml\n"))),(0,i.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",h,"/",g,'/receivers/1/send\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "payload": {\n        "data": {\n            "text": "this is notification to file 1",\n            "a_field": "a_value",\n            "another_field": "another_value"\n        }\n    }\n}\''))),(0,i.kt)("p",null,"If succeed, one new file should have been created: ",(0,i.kt)("inlineCode",{parentName:"p"},"out-file-sink1.json")," and the file will have this text."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// out-file-sink1.json\n{"a_field":"a_value","another_field":"another_value","routing_method":"receiver","text":"this is notification to file 1"}\n')),(0,i.kt)("h2",{id:"what-next"},"What Next?"),(0,i.kt)("p",null,"Well done, you just completed a tour to send an on-demand notification. The ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/tour/2alerting_rules_subscriptions_overview"},"next tour")," will be around how to create alerting rules and subscribe a notification if an alert is triggered."),(0,i.kt)("p",null,"Apart from the tour, we recommend completing the ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/guides/overview"},"guides"),". You could also check out the remainder of the documentation in the ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/reference/server_configuration"},"reference")," and ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/concepts/overview"},"concepts")," sections for your specific areas of interest. We've aimed to provide as much documentation as we can for the various components of Siren to give you a full understanding of Siren's surface area. If you are interested to contribute, check out the ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/contribute/contribution"},"contribution")," page."))}b.isMDXComponent=!0},3618:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>n});const n={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>n});const n={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);