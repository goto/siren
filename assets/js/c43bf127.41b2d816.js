"use strict";(self.webpackChunksiren=self.webpackChunksiren||[]).push([[328],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2331:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s="Alert credentials management",c={unversionedId:"guides/alert_credentials",id:"guides/alert_credentials",isDocsHomePage:!1,title:"Alert credentials management",description:"You can use Siren to configure Alertmanager to route alerts to get notified when alerts are triggered from the rules you",source:"@site/docs/guides/alert_credentials.md",sourceDirName:"guides",slug:"/guides/alert_credentials",permalink:"/siren/docs/guides/alert_credentials",editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/guides/alert_credentials.md",tags:[],version:"current",lastUpdatedBy:"Ravi Suhag",lastUpdatedAt:1639651423,formattedLastUpdatedAt:"12/16/2021",frontMatter:{},sidebar:"docsSidebar",previous:{title:"HTTP Client",permalink:"/siren/docs/guides/client"},next:{title:"Alert History Subscription",permalink:"/siren/docs/guides/alert_history"}},d=[],u={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"alert-credentials-management"},"Alert credentials management"),(0,o.kt)("p",null,"You can use Siren to configure Alertmanager to route alerts to get notified when alerts are triggered from the rules you\nhave defined. Siren stores slack and pagerduty credentials per team which gets set in Alertmanager Configuration. This\ncan be configured from the HTTP APIs."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Creating/Updating Slack and Pagerduty Credentials")),(0,o.kt)("p",null,"Here is an example to create slack and pagerduty credentials routing configuration in Alertmanager."),(0,o.kt)("p",null,"A valid request payload has a Slack webhook, a Slack channel name and slack username for warning and critical severity\nlevels along with pagerduty service key. You also need to mention the entity (tenant id) which is tenant id in Cortex\nalertmanager."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'PUT /teams/siren_devs/credentials HTTP/1.1\nHost: localhost:3000\nContent-Type: application/json\nContent-Length: 381\n\n{\n  "entity": "odpf",\n  "pagerduty_credentials": "x67foo9bar",\n  "slack_config": {\n    "critical": {\n      "channel": "siren_devs_critical",\n      "username": "friday-bot",\n      "webhook": "https://hooks.slack.com/services/abcd/efgh"\n    },\n    "warning": {\n      "channel": "siren_devs_warning",\n      "username": "friday-bot",\n      "webhook": "https://hooks.slack.com/services/abcd/ikjl"\n    }\n  }\n}\n')),(0,o.kt)("p",null,"This will update the alertmanager configs of ",(0,o.kt)("inlineCode",{parentName:"p"},"odpf")," entity with the credentials as given."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"How routing works")),(0,o.kt)("p",null,"Once alert credential has been created via Siren, there will be an entry created inside ",(0,o.kt)("inlineCode",{parentName:"p"},"receivers")," inside Cortex\nAlertmanager config of ",(0,o.kt)("inlineCode",{parentName:"p"},"odpf")," tenant which would look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"      - name: slack-critical-siren_devs\n        slack_configs:\n          - channel: 'siren_devs-critical'\n            api_url: 'https://hooks.slack.com/services/abcd/efgh'\n            username: 'friday-bot'\n            icon_emoji: ':eagle:'\n            link_names: false\n            send_resolved: true\n            color: '{{ template \"slack.color\" . }}'\n            title: ''\n            pretext: '{{template \"slack.pretext\" . }}'\n            text: '{{ template \"slack.body\" . }}'\n            actions:\n              - type: button\n                text: 'Runbook :books:'\n                url: '{{template \"slack.runbook\" . }}'\n              - type: button\n                text: 'Dashboard :bar_chart:'\n                url: '{{template \"slack.dashboard\" . }}'\n      - name: slack-warning-siren_devs\n        slack_configs:\n          - channel: 'siren_devs-warning'\n            api_url: 'https://hooks.slack.com/services/abcd/ikjl'\n            username: 'friday-bot'\n            icon_emoji: ':eagle:'\n            link_names: false\n            send_resolved: true\n            color: '{{ template \"slack.color\" . }}'\n            title: ''\n            pretext: '{{template \"slack.pretext\" . }}'\n            text: '{{ template \"slack.body\" . }}'\n            actions:\n              - type: button\n                text: 'Runbook :books:'\n                url: '{{template \"slack.runbook\" . }}'\n              - type: button\n                text: 'Dashboard :bar_chart:'\n                url: '{{template \"slack.dashboard\" . }}'\n      - name: pagerduty-EIM\n        pagerduty_configs:\n          - service_key: 'x67foo9bar'\n")),(0,o.kt)("p",null,"So if the rule has a label of ",(0,o.kt)("inlineCode",{parentName:"p"},"team")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"siren_devs")," the alert will be processed by these receivers."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Fetching alerting credentials")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"GET /teams/siren_devs/credentials HTTP/1.1\nHost: localhost:3000\n")),(0,o.kt)("p",null,"This will return the stored credentials for team ",(0,o.kt)("inlineCode",{parentName:"p"},"siren_devs")))}p.isMDXComponent=!0}}]);