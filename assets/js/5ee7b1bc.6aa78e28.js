"use strict";(self.webpackChunksiren=self.webpackChunksiren||[]).push([[9810],{1480:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var n=i(7462),o=i(3366),r=(i(7294),i(3905)),a=["components"],s={},c="Glossary",l={unversionedId:"concepts/glossary",id:"concepts/glossary",isDocsHomePage:!1,title:"Glossary",description:"Provider",source:"@site/docs/concepts/glossary.md",sourceDirName:"concepts",slug:"/concepts/glossary",permalink:"/siren/docs/concepts/glossary",editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/concepts/glossary.md",tags:[],version:"current",lastUpdatedBy:"Ravi Suhag",lastUpdatedAt:1666359878,formattedLastUpdatedAt:"10/21/2022",frontMatter:{}},d=[{value:"Provider",id:"provider",children:[]},{value:"Namespace",id:"namespace",children:[]},{value:"Receiver",id:"receiver",children:[]},{value:"Rule",id:"rule",children:[]},{value:"Template",id:"template",children:[]},{value:"Subscription",id:"subscription",children:[]},{value:"Notification",id:"notification",children:[]},{value:"Alert History",id:"alert-history",children:[]},{value:"Notification Vendor",id:"notification-vendor",children:[]},{value:"Notification Message Payload",id:"notification-message-payload",children:[]}],u={toc:d};function p(e){var t=e.components,i=(0,o.Z)(e,a);return(0,r.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"glossary"},"Glossary"),(0,r.kt)("h2",{id:"provider"},"Provider"),(0,r.kt)("p",null,"Monitoring and Alerting Provider. E.g. Cortexmetrics, Influx 2.0, Prometheus etc."),(0,r.kt)("h2",{id:"namespace"},"Namespace"),(0,r.kt)("p",null,"Used to represent multi-tenancy in a given provider. Cortex calls it a tenant, influx 2.0 calls it organization."),(0,r.kt)("h2",{id:"receiver"},"Receiver"),(0,r.kt)("p",null,"Receivers are alert routing and notification mediums. Examples: Slack, Pagerduty, HTTP POST Webhooks etc. They contain global level configs which enables clients to use this medium for alert routing or sending notifications."),(0,r.kt)("h2",{id:"rule"},"Rule"),(0,r.kt)("p",null,"Alerting rules that are set within a provider"),(0,r.kt)("h2",{id:"template"},"Template"),(0,r.kt)("p",null,"An abstraction of data in Siren that could make data definition reusable. Currently template can be used to define ",(0,r.kt)("a",{parentName:"p",href:"/siren/docs/guides/rule"},"rules")," and ",(0,r.kt)("a",{parentName:"p",href:"/siren/docs/guides/notification"},"notification's")," message body."),(0,r.kt)("h2",{id:"subscription"},"Subscription"),(0,r.kt)("p",null,"Using subscriptions one can get notified when a set of conditions are true on a triggered alert."),(0,r.kt)("h2",{id:"notification"},"Notification"),(0,r.kt)("p",null,"A message to be sent to the specific receivers. Notification could be sent directly to receivers or sent by matching subscription's labels."),(0,r.kt)("h2",{id:"alert-history"},"Alert History"),(0,r.kt)("p",null,"Triggered Alert History. Siren provides simple endpoints to accept alert trigger event from various alerting providers e.g. Prometheus Alertmanager, Kapacitor, Influx 2.0 etc."),(0,r.kt)("h2",{id:"notification-vendor"},"Notification Vendor"),(0,r.kt)("p",null,"External parties that has capability to communicates to the end-user with their own medium e.g. Slack, PagerDuty."),(0,r.kt)("h2",{id:"notification-message-payload"},"Notification Message Payload"),(0,r.kt)("p",null,"Notification Message Payload is the data that are being sent to the notification vendor in the format that meets notification vendor's contract."))}p.isMDXComponent=!0}}]);