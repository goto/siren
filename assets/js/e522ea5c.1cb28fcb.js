"use strict";(self.webpackChunksiren=self.webpackChunksiren||[]).push([[2419],{87020:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=i(58168),n=(i(96540),i(15680));const r={},s="Alert",a={unversionedId:"concepts/alert",id:"concepts/alert",title:"Alert",description:"Alert is being one of the source of notification in Siren. Alert is ingested via Alert Webhook and the webhook is registered to a Monitoring System (e.g. Prometheus, Cortex).",source:"@site/docs/concepts/alert.md",sourceDirName:"concepts",slug:"/concepts/alert",permalink:"/siren/docs/concepts/alert",draft:!1,editUrl:"https://github.com/goto/siren/edit/master/docs/docs/concepts/alert.md",tags:[],version:"current",frontMatter:{}},c={},l=[],d={toc:l},p="wrapper";function g(e){let{components:t,...i}=e;return(0,n.yg)(p,(0,o.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"alert"},"Alert"),(0,n.yg)("p",null,"Alert is being one of the source of notification in Siren. Alert is ingested via ",(0,n.yg)("a",{parentName:"p",href:"/siren/docs/apis/siren-service-create-alerts"},"Alert Webhook")," and the webhook is registered to a Monitoring System (e.g. Prometheus, Cortex).\nOnce ingested by Siren, alert will be stored as Alert History. Alerts that are being sent by provider will be translated to a ",(0,n.yg)("inlineCode",{parentName:"p"},"Notification")," by ",(0,n.yg)("inlineCode",{parentName:"p"},"Notification Service"),". From this point, the notification is being dispatched by a ",(0,n.yg)("inlineCode",{parentName:"p"},"Notification Dispatcher")," according to the strategy that it took."),(0,n.yg)("p",null,"The next process could be found under ",(0,n.yg)("a",{parentName:"p",href:"/siren/docs/concepts/notification"},"Notification"),"."))}g.isMDXComponent=!0}}]);