(self.webpackChunksiren=self.webpackChunksiren||[]).push([[304],{1410:function(e,t,r){const n=r(7694),i=r(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://odpf.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"odpf",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},presets:[["@docusaurus/preset-classic",{docs:{sidebarPath:6679,editUrl:"https://github.com/odpf/siren/edit/master/docs/",sidebarCollapsed:!0,breadcrumbs:!1},blog:!1,theme:{customCss:[5308,2295]},gtag:{trackingID:"G-EPXDLH6V72"}}]],themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0},navbar:{title:"Siren",logo:{src:"img/logo.svg"},hideOnScroll:!0,items:[{type:"doc",docId:"introduction",position:"right",label:"Docs"},{to:"docs/support",label:"Support",position:"right"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/odpf/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[]},prism:{theme:n,darkTheme:i},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/odpf/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}}}},5162:function(e,t,r){"use strict";r.d(t,{Z:function(){return o}});var n=r(7294),i=r(4334),a="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,o),hidden:r},t)}},5488:function(e,t,r){"use strict";r.d(t,{Z:function(){return g}});var n=r(3117),i=r(7294),a=r(4334),o=r(2389),s=r(7392),l=r(7094),c=r(2466),u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:r,block:o,defaultValue:d,values:g,groupId:m,className:f}=e,b=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=g??b.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,s.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===d?d:d??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==h&&!v.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:_}=(0,l.U)(),[T,N]=(0,i.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:C}=(0,c.o5)();if(null!=m){const e=k[m];null!=e&&e!==T&&v.some((t=>t.value===e))&&N(e)}const I=e=>{const t=e.currentTarget,r=w.indexOf(t),n=v[r].value;n!==T&&(C(t),N(n),null!=m&&_(m,String(n)))},x=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;r=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;r=w[t]??w[w.length-1];break}}null==(t=r)||t.focus()};return i.createElement("div",{className:(0,a.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},f)},v.map((e=>{let{value:t,label:r,attributes:o}=e;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>w.push(e),onKeyDown:x,onFocus:I,onClick:I},o,{className:(0,a.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":T===t})}),r??t)}))),r?(0,i.cloneElement)(b.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function g(e){const t=(0,o.Z)();return i.createElement(d,(0,n.Z)({key:String(t)},e))}},6679:function(e){e.exports={docsSidebar:["introduction",{type:"category",label:"Tour",items:["tour/introduction","tour/startup_siren_server","tour/registering_provider","tour/registering_receivers","tour/sending_notifications_to_receiver","tour/configuring_provider_alerting_rules","tour/subscribing_notifications"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/schema"]},{type:"category",label:"Guides",items:["guides/overview","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/deployment"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/receiver","contribute/provider","contribute/release"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/receiver","reference/cli"]}]}},6465:function(e,t,r){"use strict";r.r(t),r.d(t,{apiVersion:function(){return f},assets:function(){return g},contentTitle:function(){return p},default:function(){return y},defaultHost:function(){return b},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var n=r(3117),i=(r(7294),r(3905)),a=r(5488),o=r(5162),s=r(6066),l=r(1410),c=r.n(l);const u={},p="3 - Registering Receivers",d={unversionedId:"tour/registering_receivers",id:"tour/registering_receivers",title:"3 - Registering Receivers",description:"1. Register a receiver",source:"@site/docs/tour/3_registering_receivers.md",sourceDirName:"tour",slug:"/tour/registering_receivers",permalink:"/siren/docs/tour/registering_receivers",draft:!1,editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/tour/3_registering_receivers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docsSidebar",previous:{title:"2 - Registering Provider and Namespaces",permalink:"/siren/docs/tour/registering_provider"},next:{title:"4 - Sending Notification to Receiver",permalink:"/siren/docs/tour/sending_notifications_to_receiver"}},g={},m=[{value:"1. Register a receiver",id:"1-register-a-receiver",level:2}],f=c().customFields.apiVersion,b=c().customFields.defaultHost,v={toc:m,apiVersion:f};function y(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},v,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"3---registering-receivers"},"3 - Registering Receivers"),(0,i.kt)("h2",{id:"1-register-a-receiver"},"1. Register a receiver"),(0,i.kt)("p",null,"Siren supports several types of receiver to send notification to. For this tour, let's pick the simplest receiver: ",(0,i.kt)("inlineCode",{parentName:"p"},"file"),". With ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," receiver, all published notifications will be written to a file. Let's create two receivers ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," with different filename using Siren CLI."),(0,i.kt)("p",null,"Prepare receivers detail:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOT >> receiver_1.yaml\nname: file-sink-1\ntype: file\nlabels:\n    key1: value1\n    key2: value2\nconfigurations:\n    url: ./out-file-sink1.json\nEOT\n")),(0,i.kt)("p",null,"Register the receiver with this command"),(0,i.kt)("p",null,"Prepare a receiver detail:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOT >> receiver_2.yaml\nname: file-sink-2\ntype: file\nlabels:\n    key1: value1\n    key2: value2\nconfigurations:\n    url: ./out-file-sink2.json\nEOT\n")),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./siren receiver create -f receiver_1.yaml\n")),(0,i.kt)("p",null,"Once done, you will get messages"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Receiver created with id: 1 \u2713\n"))),(0,i.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",f,'/receivers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "file-sink-1",\n    "type": "file",\n    "labels": {\n        "key1": "value1",\n        "key2": "value2"\n    },\n    "configurations": {\n        "url": "./out-file-sink1.json"\n    }\n}\''))),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./siren receiver create -f receiver_2.yaml\n")),(0,i.kt)("p",null,"Once done, you will get messages"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Receiver created with id: 2 \u2713\n"))),(0,i.kt)(o.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(s.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",f,'/receivers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "file-sink-2",\n    "type": "file",\n    "labels": {\n        "key1": "value1",\n        "key2": "value2"\n    },\n    "configurations": {\n        "url": "./out-file-sink2.json"\n    }\n}\''))))}y.isMDXComponent=!0},3618:function(e,t,r){"use strict";r.r(t);t.default={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:function(e,t,r){"use strict";r.r(t);t.default={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);