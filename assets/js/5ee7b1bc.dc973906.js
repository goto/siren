"use strict";(self.webpackChunksiren=self.webpackChunksiren||[]).push([[1743],{66208:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(58168),n=(t(96540),t(15680));const a={},r="Glossary",s={unversionedId:"concepts/glossary",id:"concepts/glossary",title:"Glossary",description:"Provider",source:"@site/docs/concepts/glossary.md",sourceDirName:"concepts",slug:"/concepts/glossary",permalink:"/siren/docs/concepts/glossary",draft:!1,editUrl:"https://github.com/goto/siren/edit/master/docs/docs/concepts/glossary.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Notification",permalink:"/siren/docs/concepts/notification"},next:{title:"Overview",permalink:"/siren/docs/guides/overview"}},l={},c=[{value:"Provider",id:"provider",level:2},{value:"Namespace",id:"namespace",level:2},{value:"Receiver",id:"receiver",level:2},{value:"Rule",id:"rule",level:2},{value:"Template",id:"template",level:2},{value:"Subscription",id:"subscription",level:2},{value:"Notification",id:"notification",level:2},{value:"Alert History",id:"alert-history",level:2},{value:"Notification Vendor",id:"notification-vendor",level:2},{value:"Notification Message Payload",id:"notification-message-payload",level:2}],d={toc:c},u="wrapper";function g(e){let{components:i,...t}=e;return(0,n.yg)(u,(0,o.A)({},d,t,{components:i,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"glossary"},"Glossary"),(0,n.yg)("h2",{id:"provider"},"Provider"),(0,n.yg)("p",null,"Monitoring and Alerting Provider. E.g. Cortexmetrics, Influx 2.0, Prometheus etc."),(0,n.yg)("h2",{id:"namespace"},"Namespace"),(0,n.yg)("p",null,"Used to represent multi-tenancy in a given provider. Cortex calls it a tenant, influx 2.0 calls it organization."),(0,n.yg)("h2",{id:"receiver"},"Receiver"),(0,n.yg)("p",null,"Receivers are alert routing and notification mediums. Examples: Slack, Pagerduty, HTTP POST Webhooks etc. They contain global level configs which enables clients to use this medium for alert routing or sending notifications."),(0,n.yg)("h2",{id:"rule"},"Rule"),(0,n.yg)("p",null,"Alerting rules that are set within a provider"),(0,n.yg)("h2",{id:"template"},"Template"),(0,n.yg)("p",null,"An abstraction of data in Siren that could make data definition reusable. Currently template can be used to define ",(0,n.yg)("a",{parentName:"p",href:"/siren/docs/guides/rule"},"rules")," and ",(0,n.yg)("a",{parentName:"p",href:"/siren/docs/guides/notification"},"notification's")," message body."),(0,n.yg)("h2",{id:"subscription"},"Subscription"),(0,n.yg)("p",null,"Using subscriptions one can get notified when a set of conditions are true on a triggered alert."),(0,n.yg)("h2",{id:"notification"},"Notification"),(0,n.yg)("p",null,"A message to be sent to the specific receivers. Notification could be sent directly to receivers or sent by matching subscription's labels."),(0,n.yg)("h2",{id:"alert-history"},"Alert History"),(0,n.yg)("p",null,"Triggered Alert History. Siren provides simple endpoints to accept alert trigger event from various alerting providers e.g. Prometheus Alertmanager, Kapacitor, Influx 2.0 etc."),(0,n.yg)("h2",{id:"notification-vendor"},"Notification Vendor"),(0,n.yg)("p",null,"External parties that has capability to communicates to the end-user with their own medium e.g. Slack, PagerDuty."),(0,n.yg)("h2",{id:"notification-message-payload"},"Notification Message Payload"),(0,n.yg)("p",null,"Notification Message Payload is the data that are being sent to the notification vendor in the format that meets notification vendor's contract."))}g.isMDXComponent=!0}}]);