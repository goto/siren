(self.webpackChunksiren=self.webpackChunksiren||[]).push([[8484],{1410:function(e,t,n){var r=n(7694),o=n(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://odpf.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"odpf",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0,switchConfig:{darkIcon:"\u263e",lightIcon:"\u2600\ufe0f"}},navbar:{title:"Siren",logo:{src:"img/logo.svg"},items:[{type:"doc",docId:"introduction",position:"left",label:"Docs"},{to:"/blog",label:"Blog",position:"left"},{to:"/help",label:"Help",position:"left"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/odpf/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[{title:"Products",items:[{label:"Meteor",href:"https://github.com/odpf/meteor"},{label:"Firehose",href:"https://github.com/odpf/firehose"},{label:"Raccoon",href:"https://github.com/odpf/raccoon"},{label:"Dagger",href:"https://odpf.github.io/dagger/"}]},{title:"Resources",items:[{label:"Docs",to:"/docs/introduction"},{label:"Blog",to:"/blog"},{label:"Help",to:"/help"}]},{title:"Community",items:[{label:"Slack",href:"https://bit.ly/2RzPbtn"},{label:"GitHub",href:"https://github.com/odpf/siren"}]}],copyright:"Copyright \xa9 2022-"+(new Date).getFullYear()+" ODPF"},prism:{theme:r,darkTheme:o},gtag:{trackingID:"G-XXX"},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/odpf/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}},presets:[["@docusaurus/preset-classic",{docs:{showLastUpdateAuthor:!0,showLastUpdateTime:!0,sidebarPath:6679,editUrl:"https://github.com/odpf/siren/edit/master/docs/"},blog:{showReadingTime:!0,editUrl:"https://github.com/odpf/siren/edit/master/docs/blog/"},theme:{customCss:[5308,2295]}}]]}},8215:function(e,t,n){"use strict";var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},5064:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var r=n(7294),o=n(9443);var i=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},a=n(6010),s="tabItem_vU9c",l="tabItemActive_cw6a";var c=function(e){var t,n=e.lazy,o=e.block,c=e.defaultValue,u=e.values,d=e.groupId,p=e.className,f=r.Children.toArray(e.children),g=null!=u?u:f.map((function(e){return{value:e.props.value,label:e.props.label}})),m=null!=c?c:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value,h=i(),b=h.tabGroupChoices,v=h.setTabGroupChoices,y=(0,r.useState)(m),k=y[0],_=y[1],C=[];if(null!=d){var N=b[d];null!=N&&N!==k&&g.some((function(e){return e.value===N}))&&_(N)}var w=function(e){var t=e.currentTarget,n=C.indexOf(t),r=g[n].value;_(r),null!=d&&(v(d,r),setTimeout((function(){var e,n,r,o,i,a,s,c;(e=t.getBoundingClientRect(),n=e.top,r=e.left,o=e.bottom,i=e.right,a=window,s=a.innerHeight,c=a.innerWidth,n>=0&&i<=c&&o<=s&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},T=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.target)+1;n=C[r]||C[0];break;case"ArrowLeft":var o=C.indexOf(e.target)-1;n=C[o]||C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},p)},g.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,a.Z)("tabs__item",s,{"tabs__item--active":k===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:T,onFocus:w,onClick:w},null!=n?n:t)}))),n?(0,r.cloneElement)(f.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},6679:function(e){e.exports={docsSidebar:["introduction",{type:"category",label:"Tour",items:["tour/introduction","tour/startup_siren_server","tour/registering_provider","tour/registering_receivers","tour/sending_notifications_to_receiver","tour/configuring_provider_alerting_rules","tour/subscribing_notifications"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/schema"]},{type:"category",label:"Guides",items:["guides/overview","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/deployment"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/receiver","contribute/provider","contribute/release"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/receiver","reference/cli"]}]}},9046:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return f},metadata:function(){return g},toc:function(){return m},apiVersion:function(){return h},defaultHost:function(){return b},default:function(){return y}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=n(5064),s=n(8215),l=n(6213),c=n(1410),u=n.n(c),d=["components"],p={},f="4 - Sending Notification to Receiver",g={unversionedId:"tour/sending_notifications_to_receiver",id:"tour/sending_notifications_to_receiver",isDocsHomePage:!1,title:"4 - Sending Notification to Receiver",description:"export const apiVersion = siteConfig.customFields.apiVersion",source:"@site/docs/tour/4_sending_notifications_to_receiver.md",sourceDirName:"tour",slug:"/tour/sending_notifications_to_receiver",permalink:"/siren/docs/tour/sending_notifications_to_receiver",editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/tour/4_sending_notifications_to_receiver.md",tags:[],version:"current",lastUpdatedBy:"Ravi Suhag",lastUpdatedAt:1666359878,formattedLastUpdatedAt:"10/21/2022",sidebarPosition:4,frontMatter:{},sidebar:"docsSidebar",previous:{title:"3 - Registering Receivers",permalink:"/siren/docs/tour/registering_receivers"},next:{title:"5 - Configuring Provider Alerting Rules",permalink:"/siren/docs/tour/configuring_provider_alerting_rules"}},m=[],h=u().customFields.apiVersion,b=u().customFields.defaultHost,v={toc:m,apiVersion:h};function y(e){var t=e.components,n=(0,o.Z)(e,d);return(0,i.kt)("wrapper",(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"4---sending-notification-to-receiver"},"4 - Sending Notification to Receiver"),(0,i.kt)("p",null,"In previous ",(0,i.kt)("a",{parentName:"p",href:"/siren/docs/tour/registering_receivers"},"part"),", we have already registered several receivers and got back the receiver IDs. We could send a notification to the receivers with ",(0,i.kt)("inlineCode",{parentName:"p"},"/receivers/:receiverId/send")," API. We can use Siren CLI to do this."),(0,i.kt)("p",null,"We need to prepare the message payload as yaml to be sent by Siren CLI. The message is expected to be placed under ",(0,i.kt)("inlineCode",{parentName:"p"},"payload.data"),"."),(0,i.kt)("p",null,"Prepare a message to send to receiver 1."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOT >> message_file_1.yaml\npayload:\n    data:\n        text: this is notification to file 1\n        a_field: a_value\n        another_field: another_value\nEOT\n")),(0,i.kt)("p",null,"Then we can run ",(0,i.kt)("inlineCode",{parentName:"p"},"receiver send")," command and target the receiver id ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," with flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--id"),"."),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./siren receiver send --id 1 -f message_file_1.yaml\n"))),(0,i.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",h,'/receivers/1/send\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "payload": {\n        "data": {\n            "text": "this is notification to file 1",\n            "a_field": "a_value",\n            "another_field": "another_value"\n        }\n    }\n}\''))),(0,i.kt)("p",null,"Prepare a message to send to receiver 2."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cat <<EOT >> message_file_2.yaml\npayload:\n    data:\n        text: this is notification to file 2\n        a_field: a_value\n        another_field: another_value\nEOT\n")),(0,i.kt)("p",null,"Then we can run ",(0,i.kt)("inlineCode",{parentName:"p"},"receiver send")," command and target the receiver id ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," with flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--id"),"."),(0,i.kt)(a.Z,{groupId:"api",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./siren receiver send --id 2 -f message_file_2.yaml\n"))),(0,i.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,i.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",h,'/receivers/2/send\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "payload": {\n        "data": {\n            "text": "this is notification to file 2",\n            "a_field": "a_value",\n            "another_field": "another_value"\n        }\n    }\n}\''))),(0,i.kt)("p",null,"If succeed, two new files have been created: ",(0,i.kt)("inlineCode",{parentName:"p"},"out-file-sink1.json")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"out-file-sink2.json"),". Each file will have this content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// out-file-sink1.json\n{"a_field":"a_value","another_field":"another_value","routing_method":"receiver","text":"this is notification to file 1"}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// out-file-sink2.json\n{"a_field":"a_value","another_field":"another_value","routing_method":"receiver","text":"this is notification to file 2"}\n')))}y.isMDXComponent=!0},3618:function(e,t,n){"use strict";n.r(t);t.default={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:function(e,t,n){"use strict";n.r(t);t.default={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);