(self.webpackChunksiren=self.webpackChunksiren||[]).push([[9419],{73252:e=>{e.exports=[{type:"doc",id:"apis/siren-apis"},{type:"category",label:"Alert",link:{type:"generated-index",title:"Alert",slug:"/category/apis/alert"},items:[{type:"doc",id:"apis/siren-service-list-alerts",label:"list alerts",className:"api-method get"},{type:"doc",id:"apis/siren-service-create-alerts",label:"create alerts",className:"api-method post"},{type:"doc",id:"apis/siren-service-create-alerts-with-namespace",label:"create alerts with namespace",className:"api-method post"}]},{type:"category",label:"Notification",link:{type:"generated-index",title:"Notification",slug:"/category/apis/notification"},items:[{type:"doc",id:"apis/siren-service-post-bulk-notifications",label:"Post bulk event notifications",className:"api-method post"},{type:"doc",id:"apis/siren-service-list-notifications",label:"List notifications",className:"api-method get"},{type:"doc",id:"apis/siren-service-post-notification",label:"Post an event notification",className:"api-method post"},{type:"doc",id:"apis/siren-service-list-notification-messages",label:"List messages generated by notification",className:"api-method get"}]},{type:"category",label:"Namespace",link:{type:"generated-index",title:"Namespace",slug:"/category/apis/namespace"},items:[{type:"doc",id:"apis/siren-service-list-namespaces",label:"list namespaces",className:"api-method get"},{type:"doc",id:"apis/siren-service-create-namespace",label:"create a namespace",className:"api-method post"},{type:"doc",id:"apis/siren-service-get-namespace",label:"get a namespace",className:"api-method get"},{type:"doc",id:"apis/siren-service-delete-namespace",label:"delete a namespace",className:"api-method delete"},{type:"doc",id:"apis/siren-service-update-namespace",label:"update a namespace",className:"api-method put"}]},{type:"category",label:"Provider",link:{type:"generated-index",title:"Provider",slug:"/category/apis/provider"},items:[{type:"doc",id:"apis/siren-service-list-providers",label:"list providers",className:"api-method get"},{type:"doc",id:"apis/siren-service-create-provider",label:"create a provider",className:"api-method post"},{type:"doc",id:"apis/siren-service-get-provider",label:"get a provider",className:"api-method get"},{type:"doc",id:"apis/siren-service-delete-provider",label:"delete a provider",className:"api-method delete"},{type:"doc",id:"apis/siren-service-update-provider",label:"update a provider",className:"api-method put"}]},{type:"category",label:"Receiver",link:{type:"generated-index",title:"Receiver",slug:"/category/apis/receiver"},items:[{type:"doc",id:"apis/siren-service-list-receivers",label:"list receivers",className:"api-method get"},{type:"doc",id:"apis/siren-service-create-receiver",label:"create a receiver",className:"api-method post"},{type:"doc",id:"apis/siren-service-get-receiver",label:"get a receiver",className:"api-method get"},{type:"doc",id:"apis/siren-service-delete-receiver",label:"delete a receiver",className:"api-method delete"},{type:"doc",id:"apis/siren-service-update-receiver",label:"update a receiver",className:"api-method put"},{type:"doc",id:"apis/siren-service-notify-receiver",label:"send notification to receiver",className:"api-method post"}]},{type:"category",label:"Rule",link:{type:"generated-index",title:"Rule",slug:"/category/apis/rule"},items:[{type:"doc",id:"apis/siren-service-list-rules",label:"list rules",className:"api-method get"},{type:"doc",id:"apis/siren-service-update-rule",label:"add/update a rule",className:"api-method put"}]},{type:"category",label:"Silence",link:{type:"generated-index",title:"Silence",slug:"/category/apis/silence"},items:[{type:"doc",id:"apis/siren-service-list-silences",label:"get all silences",className:"api-method get"},{type:"doc",id:"apis/siren-service-create-silence",label:"create a silence",className:"api-method post"},{type:"doc",id:"apis/siren-service-get-silence",label:"get a silence",className:"api-method get"},{type:"doc",id:"apis/siren-service-expire-silence",label:"expire a silence",className:"api-method delete"}]},{type:"category",label:"Subscription",link:{type:"generated-index",title:"Subscription",slug:"/category/apis/subscription"},items:[{type:"doc",id:"apis/siren-service-list-subscriptions",label:"List subscriptions",className:"api-method get"},{type:"doc",id:"apis/siren-service-create-subscription",label:"Create a subscription",className:"api-method post"},{type:"doc",id:"apis/siren-service-get-subscription",label:"Get a subscription",className:"api-method get"},{type:"doc",id:"apis/siren-service-delete-subscription",label:"Delete a subscription",className:"api-method delete"},{type:"doc",id:"apis/siren-service-update-subscription",label:"Update a subscription",className:"api-method put"},{type:"doc",id:"apis/siren-service-list-subscription-receivers",label:"List receivers of a subscription",className:"api-method get"},{type:"doc",id:"apis/siren-service-add-subscription-receiver",label:"Add a receiver of a subscription",className:"api-method post"},{type:"doc",id:"apis/siren-service-delete-subscription-receiver",label:"Delete a receiver of a subscription",className:"api-method delete"},{type:"doc",id:"apis/siren-service-update-subscription-receiver",label:"Update a receiver of a subscription",className:"api-method put"}]},{type:"category",label:"Template",link:{type:"generated-index",title:"Template",slug:"/category/apis/template"},items:[{type:"doc",id:"apis/siren-service-list-templates",label:"list templates",className:"api-method get"},{type:"doc",id:"apis/siren-service-upsert-template",label:"add/update a template",className:"api-method put"},{type:"doc",id:"apis/siren-service-get-template",label:"get a template",className:"api-method get"},{type:"doc",id:"apis/siren-service-delete-template",label:"delete a template",className:"api-method delete"},{type:"doc",id:"apis/siren-service-render-template",label:"render a template",className:"api-method post"}]}]},89236:(e,a,t)=>{const r=t(45603),l=t(76062);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://goto.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"goto",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},presets:[["@docusaurus/preset-classic",{docs:{sidebarPath:5469,editUrl:"https://github.com/goto/siren/edit/master/docs/",sidebarCollapsed:!0,breadcrumbs:!1,docLayoutComponent:"@theme/DocPage",docItemComponent:"@theme/ApiItem"},blog:!1,theme:{customCss:[37951,51043]},gtag:{trackingID:"G-EPXDLH6V72"}}]],plugins:[["docusaurus-plugin-openapi-docs",{id:"apiDocs",docsPluginId:"classic",config:{auth:{specPath:"../proto/siren.swagger.yaml",outputDir:"docs/apis",sidebarOptions:{groupPathsBy:"tag"},hideSendButton:!1}}}]],themes:["docusaurus-theme-openapi-docs"],themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0},navbar:{title:"Siren",logo:{src:"img/logo.svg"},hideOnScroll:!0,items:[{type:"doc",docId:"introduction",position:"right",label:"Docs"},{to:"docs/support",label:"Support",position:"right"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/goto/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[]},prism:{theme:r,darkTheme:l},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/goto/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}}}},4865:(e,a,t)=>{"use strict";t.d(a,{A:()=>g});var r=t(58168),l=t(96540),i=t(20053),s=t(92303),n=t(31682),o=t(86976),p=t(23104);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:a,block:t,defaultValue:s,values:c,groupId:g,className:m}=e,u=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=c??u.map((e=>{let{props:{value:a,label:t,attributes:r}}=e;return{value:a,label:t,attributes:r}})),b=(0,n.X)(y,((e,a)=>e.value===a.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===s?s:s??u.find((e=>e.props.default))?.props.value??u[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:N}=(0,o.x)(),[T,f]=(0,l.useState)(v),x=[],{blockElementScrollPositionUntilNextRender:k}=(0,p.a_)();if(null!=g){const e=h[g];null!=e&&e!==T&&y.some((a=>a.value===e))&&f(e)}const A=e=>{const a=e.currentTarget,t=x.indexOf(a),r=y[t].value;r!==T&&(k(a),f(r),null!=g&&N(g,String(r)))},_=e=>{let a=null;switch(e.key){case"Enter":A(e);break;case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;a=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;a=x[t]??x[x.length-1];break}}a?.focus()};return l.createElement("div",{className:(0,i.A)("tabs-container",d.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},m)},y.map((e=>{let{value:a,label:t,attributes:s}=e;return l.createElement("li",(0,r.A)({role:"tab",tabIndex:T===a?0:-1,"aria-selected":T===a,key:a,ref:e=>x.push(e),onKeyDown:_,onClick:A},s,{className:(0,i.A)("tabs__item",d.tabItem,s?.className,{"tabs__item--active":T===a})}),t??a)}))),a?(0,l.cloneElement)(u.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},u.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==T})))))}function g(e){const a=(0,s.A)();return l.createElement(c,(0,r.A)({key:String(a)},e))}},5469:(e,a,t)=>{e.exports={docsSidebar:["introduction","use_cases","installation",{type:"category",label:"Tour",items:["tour/introduction","tour/setup_server","tour/1sending_notifications_overview","tour/2alerting_rules_subscriptions_overview"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/notification","concepts/glossary"]},{type:"category",label:"Guides",items:["guides/overview","guides/deployment","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/workers","guides/job"]},{type:"category",label:"Providers",items:["providers/cortexmetrics"]},{type:"category",label:"Receivers",items:["receivers/slack","receivers/pagerduty","receivers/http","receivers/file"]},{type:"category",label:"APIs",link:{type:"doc",id:"apis/siren-apis"},items:[t(73252)]},{type:"category",label:"Reference",items:["reference/server_configuration","reference/client_configuration","reference/cli"]},{type:"category",label:"Extend",items:["extend/adding_new_provider","extend/adding_new_receiver"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/release"]}]}},50375:(e,a,t)=>{"use strict";t.r(a),t.d(a,{apiVersion:()=>y,assets:()=>m,contentTitle:()=>c,default:()=>N,defaultHost:()=>b,frontMatter:()=>d,metadata:()=>g,toc:()=>u});var r=t(58168),l=(t(96540),t(15680)),i=t(4865),s=t(19365),n=t(64905),o=t(89236),p=t.n(o);const d={},c="Provider and Namespace",g={unversionedId:"guides/provider_and_namespace",id:"guides/provider_and_namespace",title:"Provider and Namespace",description:"Siren provider represents a monitoring server. We define alerts and alerts routing configuration inside providers. For example the below provider, describes how a cortex monitoring server info is stored inside Siren.",source:"@site/docs/guides/provider_and_namespace.md",sourceDirName:"guides",slug:"/guides/provider_and_namespace",permalink:"/siren/docs/guides/provider_and_namespace",draft:!1,editUrl:"https://github.com/goto/siren/edit/master/docs/docs/guides/provider_and_namespace.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Server Installation",permalink:"/siren/docs/guides/deployment"},next:{title:"Receiver",permalink:"/siren/docs/guides/receiver"}},m={},u=[{value:"Provider",id:"provider",level:2},{value:"Provider creation",id:"provider-creation",level:3},{value:"Provider update",id:"provider-update",level:3},{value:"Getting a provider",id:"getting-a-provider",level:3},{value:"Getting all providers",id:"getting-all-providers",level:3},{value:"Deleting a provider",id:"deleting-a-provider",level:3},{value:"Namespace",id:"namespace",level:2},{value:"Creating a namespace",id:"creating-a-namespace",level:3},{value:"Updating a namespace",id:"updating-a-namespace",level:3},{value:"Getting a namespace",id:"getting-a-namespace",level:3},{value:"Getting all namespaces",id:"getting-all-namespaces",level:3},{value:"Deleting a namespace",id:"deleting-a-namespace",level:3}],y=p().customFields.apiVersion,b=p().customFields.defaultHost,v={toc:u,apiVersion:y},h="wrapper";function N(e){let{components:a,...t}=e;return(0,l.yg)(h,(0,r.A)({},v,t,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"provider-and-namespace"},"Provider and Namespace"),(0,l.yg)("p",null,"Siren provider represents a monitoring server. We define alerts and alerts routing configuration inside providers. For example the below provider, describes how a cortex monitoring server info is stored inside Siren."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-json"},'# provider\n{\n  "id": "3",\n  "host": "http://localhost:9009",\n  "urn": "localhost_cortex",\n  "name": "localhost_cortex",\n  "type": "cortex",\n  "credentials": {},\n  "created_at": "2021-10-26T06:00:52.627917Z",\n  "updated_at": "2021-10-26T06:00:52.627917Z"\n}\n')),(0,l.yg)("p",null,"Monitoring providers usually have tenants, a sharded way of storing and querying telemetry data. Siren calls them ",(0,l.yg)("strong",{parentName:"p"},"namespaces"),'. You should create a namespaces with the same name as the tenant of your monitoring providers. Example: the below namespace represent the tenant "gotocompany".'),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-json"},'# namespace\n{\n  "id": "10",\n  "urn": "gotocompany",\n  "name": "gotocompany",\n  "provider": 3\n  },\n  "credentials": {},\n  "created_at": "2021-10-26T06:00:52.627917Z",\n  "updated_at": "2021-10-26T06:00:52.627917Z"\n}\n')),(0,l.yg)("h2",{id:"provider"},"Provider"),(0,l.yg)("h3",{id:"provider-creation"},"Provider creation"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren provider create --file provider.yaml\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",y,'/providers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n  "host": "http://localhost:9009",\n  "urn": "localhost_cortex",\n  "name": "localhost_cortex",\n  "type": "cortex",\n  "credentials": {},\n  "labels": {}\n}\''))),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Terminology of the request body")),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Term"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null},"Example"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"host"),(0,l.yg)("td",{parentName:"tr",align:null},"Fully qualified path for the provider"),(0,l.yg)("td",{parentName:"tr",align:null},"http://localhost:9009")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"urn"),(0,l.yg)("td",{parentName:"tr",align:null},"Unique name for this provider (uneditable)"),(0,l.yg)("td",{parentName:"tr",align:null},"localhost_cortex")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"name"),(0,l.yg)("td",{parentName:"tr",align:null},"Name of the proider (editable)"),(0,l.yg)("td",{parentName:"tr",align:null},"localhost_cortex")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"type"),(0,l.yg)("td",{parentName:"tr",align:null},"type of the provider(cortex/influx etc.)"),(0,l.yg)("td",{parentName:"tr",align:null},"cortex")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"credentials"),(0,l.yg)("td",{parentName:"tr",align:null},"key value pair to be used for authentication with the host"),(0,l.yg)("td",{parentName:"tr",align:null},'{"bearer_token":"x2y4rd5"}')),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"labels"),(0,l.yg)("td",{parentName:"tr",align:null},"key value pair that can be used as label selector"),(0,l.yg)("td",{parentName:"tr",align:null},'{"environment":"dev"}')))),(0,l.yg)("p",null,"The response body will look like this:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "1",\n  "host": "http://localhost:9009",\n  "urn": "localhost_cortex",\n  "name": "localhost_cortex",\n  "type": "cortex",\n  "credentials": {},\n  "created_at": "2022-01-03T05:10:47.880209Z",\n  "updated_at": "2022-01-03T05:10:47.880209Z"\n}\n')),(0,l.yg)("h3",{id:"provider-update"},"Provider update"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren provider edit --id 4 --file provider.yaml\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request PUT\n  --url ",b,"/",y,'/providers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n  "host": "http://localhost:9009",\n  "urn": "localhost_cortex",\n  "name": "localhost_cortex_1",\n  "type": "cortex",\n  "credentials": {},\n  "labels": {}\n}\''))),(0,l.yg)("h3",{id:"getting-a-provider"},"Getting a provider"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren provider view 1\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET --url ",b,"/",y,"/providers/1"))),(0,l.yg)("h3",{id:"getting-all-providers"},"Getting all providers"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren provider list\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET --url ",b,"/",y,"/providers"))),(0,l.yg)("h3",{id:"deleting-a-provider"},"Deleting a provider"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren provider delete 4\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request DELETE --url ",b,"/",y,"/providers/4"))),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Note:")),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"Before deleting the provider, you will need to delete dependant resources (namespaces).")),(0,l.yg)("h2",{id:"namespace"},"Namespace"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Note:")," These operations on namespaces inside Siren doesn't affect the actual tenant in the monitoring provider. The user should manage the tenants themselves."),(0,l.yg)("h3",{id:"creating-a-namespace"},"Creating a namespace"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren namespace create --file namespace.yaml\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",y,'/namespaces\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "test",\n    "urn": "test",\n    "provider": "5",\n    "credentials": {},\n    "labels": {}\n}\''))),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Terminology of the request body")),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Term"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"),(0,l.yg)("th",{parentName:"tr",align:null},"Example"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"urn"),(0,l.yg)("td",{parentName:"tr",align:null},"Unique name for this namespace (uneditable)"),(0,l.yg)("td",{parentName:"tr",align:null},"test-tenant")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"name"),(0,l.yg)("td",{parentName:"tr",align:null},"Name of the tenant (editable)"),(0,l.yg)("td",{parentName:"tr",align:null},"test-tenant")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"provider"),(0,l.yg)("td",{parentName:"tr",align:null},"id of the provider to which this tenant belongs"),(0,l.yg)("td",{parentName:"tr",align:null},"1")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"labels"),(0,l.yg)("td",{parentName:"tr",align:null},"key value pair that can be used as label selector"),(0,l.yg)("td",{parentName:"tr",align:null},'{"environment":"dev"}')),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"credentials"),(0,l.yg)("td",{parentName:"tr",align:null},"key value pair to be used for authentication with the host"),(0,l.yg)("td",{parentName:"tr",align:null},'{"bearer_token":"x2y4rd5"}')))),(0,l.yg)("p",null,"The response body will look like this:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "13",\n  "urn": "test",\n  "name": "test",\n  "provider": "5",\n  "credentials": {},\n  "created_at": "2022-01-03T07:06:30.884113Z",\n  "updated_at": "2022-01-03T07:06:30.884113Z"\n}\n')),(0,l.yg)("h3",{id:"updating-a-namespace"},"Updating a namespace"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren namespace edit --id 13 --file namespace.yaml\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request PUT\n  --url ",b,"/",y,'/namespaces/13\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "test2",\n    "urn": "test",\n    "provider": "5",\n    "credentials": {},\n    "labels": {}\n}\''))),(0,l.yg)("h3",{id:"getting-a-namespace"},"Getting a namespace"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren namespace view 13\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET --url ",b,"/",y,"/namespaces/13"))),(0,l.yg)("h3",{id:"getting-all-namespaces"},"Getting all namespaces"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren namespace list\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET --url ",b,"/",y,"/namespaces"))),(0,l.yg)("h3",{id:"deleting-a-namespace"},"Deleting a namespace"),(0,l.yg)(i.A,{groupId:"api",mdxType:"Tabs"},(0,l.yg)(s.A,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ siren namespace delete 13\n"))),(0,l.yg)(s.A,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,l.yg)(n.A,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request DELETE --url ",b,"/",y,"/namespaces/13"))))}N.isMDXComponent=!0},76062:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>r});const r={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},45603:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>r});const r={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);