"use strict";(self.webpackChunksiren=self.webpackChunksiren||[]).push([[9556],{67877:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>y,default:()=>b,frontMatter:()=>m,metadata:()=>g,toc:()=>v});var a=i(58168),n=(i(96540),i(15680)),s=i(54754),r=i(34366),o=i(13185),l=i(26612),p=i(30774),c=i(47335),d=(i(38454),i(19365));const m={id:"siren-service-notify-receiver",title:"send notification to receiver",description:"send notification to receiver",sidebar_label:"send notification to receiver",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"SirenService_NotifyReceiver",responses:{200:{description:"A successful response.",content:{"application/json":{schema:{type:"object"}}}},default:{description:"An unexpected error response.",content:{"application/json":{schema:{type:"object",properties:{code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{"@type":{type:"string"}},additionalProperties:{}}}}}}}}},parameters:[{name:"id",in:"path",required:!0,schema:{type:"string",format:"uint64"}}],requestBody:{content:{"application/json":{schema:{type:"object",properties:{payload:{type:"object"}}}}},required:!0},tags:["Receiver"],description:"send notification to receiver",method:"post",path:"/v1beta1/receivers/{id}/send",jsonRequestBodyExample:{payload:{}},info:{title:"Siren APIs",description:"Documentation of our Siren API with gRPC and\ngRPC-Gateway.",version:"0.6"},postman:{name:"send notification to receiver",description:{type:"text/plain"},url:{path:["v1beta1","receivers",":id","send"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/apis/siren-apis",custom_edit_url:null},y=void 0,g={unversionedId:"apis/siren-service-notify-receiver",id:"apis/siren-service-notify-receiver",title:"send notification to receiver",description:"send notification to receiver",source:"@site/docs/apis/siren-service-notify-receiver.api.mdx",sourceDirName:"apis",slug:"/apis/siren-service-notify-receiver",permalink:"/siren/docs/apis/siren-service-notify-receiver",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"siren-service-notify-receiver",title:"send notification to receiver",description:"send notification to receiver",sidebar_label:"send notification to receiver",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"SirenService_NotifyReceiver",responses:{200:{description:"A successful response.",content:{"application/json":{schema:{type:"object"}}}},default:{description:"An unexpected error response.",content:{"application/json":{schema:{type:"object",properties:{code:{type:"integer",format:"int32"},message:{type:"string"},details:{type:"array",items:{type:"object",properties:{"@type":{type:"string"}},additionalProperties:{}}}}}}}}},parameters:[{name:"id",in:"path",required:!0,schema:{type:"string",format:"uint64"}}],requestBody:{content:{"application/json":{schema:{type:"object",properties:{payload:{type:"object"}}}}},required:!0},tags:["Receiver"],description:"send notification to receiver",method:"post",path:"/v1beta1/receivers/{id}/send",jsonRequestBodyExample:{payload:{}},info:{title:"Siren APIs",description:"Documentation of our Siren API with gRPC and\ngRPC-Gateway.",version:"0.6"},postman:{name:"send notification to receiver",description:{type:"text/plain"},url:{path:["v1beta1","receivers",":id","send"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/apis/siren-apis",custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"update a receiver",permalink:"/siren/docs/apis/siren-service-update-receiver"},next:{title:"Rule",permalink:"/siren/docs/category/apis/rule"}},u={},v=[{value:"send notification to receiver",id:"send-notification-to-receiver",level:2}],f={toc:v},h="wrapper";function b(e){let{components:t,...i}=e;return(0,n.yg)(h,(0,a.A)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"send-notification-to-receiver"},"send notification to receiver"),(0,n.yg)("p",null,"send notification to receiver"),(0,n.yg)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.yg)("summary",{style:{}},(0,n.yg)("strong",null,"Path Parameters")),(0,n.yg)("div",null,(0,n.yg)("ul",null,(0,n.yg)(o.A,{className:"paramsItem",param:{name:"id",in:"path",required:!0,schema:{type:"string",format:"uint64"}},mdxType:"ParamsItem"})))),(0,n.yg)(r.A,{mdxType:"MimeTabs"},(0,n.yg)(d.A,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,n.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.yg)("summary",{style:{textAlign:"left"}},(0,n.yg)("strong",null,"Request Body"),(0,n.yg)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,n.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.yg)("ul",{style:{marginLeft:"1rem"}},(0,n.yg)(p.A,{collapsible:!1,name:"payload",required:!1,schemaName:"object",qualifierMessage:void 0,schema:{type:"object"},mdxType:"SchemaItem"}))))),(0,n.yg)("div",null,(0,n.yg)(s.A,{mdxType:"ApiTabs"},(0,n.yg)(d.A,{label:"200",value:"200",mdxType:"TabItem"},(0,n.yg)("div",null,(0,n.yg)("p",null,"A successful response.")),(0,n.yg)("div",null,(0,n.yg)(r.A,{schemaType:"response",mdxType:"MimeTabs"},(0,n.yg)(d.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.yg)(c.A,{mdxType:"SchemaTabs"},(0,n.yg)(d.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.yg)("summary",{style:{textAlign:"left"}},(0,n.yg)("strong",null,"Schema")),(0,n.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.yg)("ul",{style:{marginLeft:"1rem"}},(0,n.yg)("div",{style:{marginTop:".5rem",marginBottom:".5rem",marginLeft:"1rem"}},(0,n.yg)("p",null,"object"))))),(0,n.yg)(d.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.yg)(l.A,{responseExample:"{}",language:"json",mdxType:"ResponseSamples"}))))))),(0,n.yg)(d.A,{label:"default",value:"default",mdxType:"TabItem"},(0,n.yg)("div",null,(0,n.yg)("p",null,"An unexpected error response.")),(0,n.yg)("div",null,(0,n.yg)(r.A,{schemaType:"response",mdxType:"MimeTabs"},(0,n.yg)(d.A,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.yg)(c.A,{mdxType:"SchemaTabs"},(0,n.yg)(d.A,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,n.yg)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.yg)("summary",{style:{textAlign:"left"}},(0,n.yg)("strong",null,"Schema")),(0,n.yg)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.yg)("ul",{style:{marginLeft:"1rem"}},(0,n.yg)(p.A,{collapsible:!1,name:"code",required:!1,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"}),(0,n.yg)(p.A,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,n.yg)(p.A,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,n.yg)("details",{style:{}},(0,n.yg)("summary",{style:{}},(0,n.yg)("strong",null,"details"),(0,n.yg)("span",{style:{opacity:"0.6"}}," object[]")),(0,n.yg)("div",{style:{marginLeft:"1rem"}},(0,n.yg)("li",null,(0,n.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,n.yg)(p.A,{collapsible:!1,name:"@type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,n.yg)("li",null,(0,n.yg)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,n.yg)(d.A,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,n.yg)(l.A,{responseExample:'{\n  "code": 0,\n  "message": "string",\n  "details": [\n    {\n      "@type": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);