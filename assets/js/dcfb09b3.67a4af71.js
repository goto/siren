(self.webpackChunksiren=self.webpackChunksiren||[]).push([[341],{1410:(e,t,n)=>{const a=n(7694),r=n(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://odpf.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"odpf",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},presets:[["@docusaurus/preset-classic",{docs:{sidebarPath:6679,editUrl:"https://github.com/odpf/siren/edit/master/docs/",sidebarCollapsed:!0,breadcrumbs:!1},blog:!1,theme:{customCss:[5308,2295]},gtag:{trackingID:"G-EPXDLH6V72"}}]],themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0},navbar:{title:"Siren",logo:{src:"img/logo.svg"},hideOnScroll:!0,items:[{type:"doc",docId:"introduction",position:"right",label:"Docs"},{to:"docs/support",label:"Support",position:"right"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/odpf/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[]},prism:{theme:a,darkTheme:r},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/odpf/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}}}},5162:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(7294),r=n(4334);const i="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,s),hidden:n},t)}},5488:(e,t,n)=>{"use strict";n.d(t,{Z:()=>b});var a=n(3117),r=n(7294),i=n(4334),s=n(2389),o=n(7392),l=n(7094),c=n(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var t;const{lazy:n,block:s,defaultValue:p,values:b,groupId:m,className:g}=e,y=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=b??y.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),h=(0,o.l)(v,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===p?p:p??(null==(t=y.find((e=>e.props.default)))?void 0:t.props.value)??y[0].props.value;if(null!==f&&!v.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:T}=(0,l.U)(),[C,I]=(0,r.useState)(f),w=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=m){const e=k[m];null!=e&&e!==C&&v.some((t=>t.value===e))&&I(e)}const x=e=>{const t=e.currentTarget,n=w.indexOf(t),a=v[n].value;a!==C&&(N(t),I(a),null!=m&&T(m,String(a)))},Z=e=>{var t;let n=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},g)},v.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>w.push(e),onKeyDown:Z,onClick:x},s,{className:(0,i.Z)("tabs__item",d,null==s?void 0:s.className,{"tabs__item--active":C===t})}),n??t)}))),n?(0,r.cloneElement)(y.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function b(e){const t=(0,s.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},6679:e=>{e.exports={docsSidebar:["introduction","use_cases","installation",{type:"category",label:"Tour",items:["tour/introduction","tour/setup_server","tour/1sending_notifications_overview","tour/2alerting_rules_subscriptions_overview"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/notification","concepts/glossary"]},{type:"category",label:"Guides",items:["guides/overview","guides/deployment","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/workers","guides/job"]},{type:"category",label:"Providers",items:["providers/cortexmetrics"]},{type:"category",label:"Receivers",items:["receivers/slack","receivers/pagerduty","receivers/http","receivers/file"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/cli"]},{type:"category",label:"Extend",items:["extend/adding_new_provider","extend/adding_new_receiver"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/release"]}]}},7784:(e,t,n)=>{"use strict";n.r(t),n.d(t,{apiVersion:()=>g,assets:()=>b,contentTitle:()=>d,default:()=>h,defaultHost:()=>y,frontMatter:()=>u,metadata:()=>p,toc:()=>m});var a=n(3117),r=(n(7294),n(3905)),i=n(5488),s=n(5162),o=n(6066),l=n(1410),c=n.n(l);const u={},d="Subscription",p={unversionedId:"guides/subscription",id:"guides/subscription",title:"Subscription",description:"Siren lets you subscribe to a notification when they are triggered. You can define custom matching conditions and use",source:"@site/docs/guides/subscription.md",sourceDirName:"guides",slug:"/guides/subscription",permalink:"/siren/docs/guides/subscription",draft:!1,editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/guides/subscription.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Receiver",permalink:"/siren/docs/guides/receiver"},next:{title:"Rule",permalink:"/siren/docs/guides/rule"}},b={},m=[{value:"API Interface",id:"api-interface",level:2},{value:"Create a subscription",id:"create-a-subscription",level:3},{value:"Update a subscription",id:"update-a-subscription",level:3},{value:"Get all subscriptions",id:"get-all-subscriptions",level:3},{value:"Get a subscriptions",id:"get-a-subscriptions",level:3},{value:"Delete subscriptions",id:"delete-subscriptions",level:3}],g=c().customFields.apiVersion,y=c().customFields.defaultHost,v={toc:m,apiVersion:g};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"subscription"},"Subscription"),(0,r.kt)("p",null,"Siren lets you subscribe to a notification when they are triggered. You can define custom matching conditions and use\n",(0,r.kt)("a",{parentName:"p",href:"/siren/docs/guides/receiver"},"receivers")," to describe which medium you want to use for getting the notifications when a notification is triggered. A notification could be triggered on-demand via API or by the incoming alerts via webhook."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example Subscription:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "385",\n  "urn": "siren-dev-prod-critical",\n  "namespace": "10",\n  "receivers": [\n    {\n      "id": "2"\n    },\n    {\n      "id": "1",\n      "configuration": {\n        "channel_name": "siren-dev-critical"\n      }\n    }\n  ],\n  "match": {\n    "environment": "production",\n    "severity": "CRITICAL"\n  },\n  "created_at": "2021-12-10T10:38:22.364353Z",\n  "updated_at": "2021-12-10T10:38:22.364353Z"\n}\n')),(0,r.kt)("p",null,"The above means whenever any alert which has labels matching the labels\n",(0,r.kt)("inlineCode",{parentName:"p"},'"environment": "production", "severity": "CRITICAL"'),", send this alert to two medium defined by receivers with id: ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),". Assuming the receivers id ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," to be of Pagerduty type, a PD call will be invoked and assuming the receiver with id ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," to be slack type, a message will be sent to the channel #siren-dev-critical."),(0,r.kt)("h2",{id:"api-interface"},"API Interface"),(0,r.kt)("h3",{id:"create-a-subscription"},"Create a subscription"),(0,r.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren subscription create --file subscription.yaml\n"))),(0,r.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",y,"/",g,'/subscriptions\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "urn": "siren-dev-prod-critical",\n    "receivers": [\n        {\n            "id": "1",\n            "configuration": {\n                "channel_name": "siren-dev-critical"\n            }\n        },\n        {\n            "id": "2"\n        }\n    ],\n    "match": {\n        "severity": "CRITICAL",\n        "environment": "production"\n    },\n    "namespace": "10"\n}\''))),(0,r.kt)("h3",{id:"update-a-subscription"},"Update a subscription"),(0,r.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren subscription edit --id 10 --file subscription.yaml\n"))),(0,r.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request PUT\n  --url ",y,"/",g,'/subscriptions/10\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "urn": "siren-dev-prod-critical",\n    "receivers": [\n        {\n            "id": "1",\n            "configuration": {\n                "channel_name": "siren-dev-critical"\n            }\n        },\n        {\n            "id": "2"\n        }\n    ],\n    "match": {\n        "severity": "CRITICAL",\n        "environment": "production"\n    },\n    "namespace": "10"\n}\''))),(0,r.kt)("h3",{id:"get-all-subscriptions"},"Get all subscriptions"),(0,r.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren subscription list\n"))),(0,r.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET\n  --url ",y,"/",g,"/subscriptions"))),(0,r.kt)("h3",{id:"get-a-subscriptions"},"Get a subscriptions"),(0,r.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren subscription view 10\n"))),(0,r.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET\n  --url ",y,"/",g,"/subscriptions/10"))),(0,r.kt)("h3",{id:"delete-subscriptions"},"Delete subscriptions"),(0,r.kt)(i.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren subscription delete 10\n"))),(0,r.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request DELETE\n  --url ",y,"/",g,"/subscriptions/10"))))}h.isMDXComponent=!0},3618:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});const a={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});const a={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);