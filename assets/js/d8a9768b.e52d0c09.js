(self.webpackChunksiren=self.webpackChunksiren||[]).push([[5462],{1410:function(e,t,r){var i=r(7694),a=r(3618);e.exports={title:"Siren",tagline:"Universal data observability toolkit",url:"https://odpf.github.io",baseUrl:"/siren/",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.ico",organizationName:"odpf",projectName:"siren",customFields:{apiVersion:"v1beta1",defaultHost:"http://localhost:8080"},themeConfig:{colorMode:{defaultMode:"light",respectPrefersColorScheme:!0,switchConfig:{darkIcon:"\u263e",lightIcon:"\u2600\ufe0f"}},navbar:{title:"Siren",logo:{src:"img/logo.svg"},items:[{type:"doc",docId:"introduction",position:"left",label:"Docs"},{to:"/blog",label:"Blog",position:"left"},{to:"/help",label:"Help",position:"left"},{href:"https://bit.ly/2RzPbtn",position:"right",className:"header-slack-link"},{href:"https://github.com/odpf/siren",className:"navbar-item-github",position:"right"}]},footer:{style:"light",links:[{title:"Products",items:[{label:"Meteor",href:"https://github.com/odpf/meteor"},{label:"Firehose",href:"https://github.com/odpf/firehose"},{label:"Raccoon",href:"https://github.com/odpf/raccoon"},{label:"Dagger",href:"https://odpf.github.io/dagger/"}]},{title:"Resources",items:[{label:"Docs",to:"/docs/introduction"},{label:"Blog",to:"/blog"},{label:"Help",to:"/help"}]},{title:"Community",items:[{label:"Slack",href:"https://bit.ly/2RzPbtn"},{label:"GitHub",href:"https://github.com/odpf/siren"}]}],copyright:"Copyright \xa9 2022-"+(new Date).getFullYear()+" ODPF"},prism:{theme:i,darkTheme:a},gtag:{trackingID:"G-XXX"},announcementBar:{id:"star-repo",content:'\u2b50\ufe0f If you like Siren, give it a star on <a target="_blank" rel="noopener noreferrer" href="https://github.com/odpf/siren">GitHub</a>! \u2b50',backgroundColor:"#222",textColor:"#eee",isCloseable:!0}},presets:[["@docusaurus/preset-classic",{docs:{showLastUpdateAuthor:!0,showLastUpdateTime:!0,sidebarPath:6679,editUrl:"https://github.com/odpf/siren/edit/master/docs/"},blog:{showReadingTime:!0,editUrl:"https://github.com/odpf/siren/edit/master/docs/blog/"},theme:{customCss:[5308,2295]}}]]}},8215:function(e,t,r){"use strict";var i=r(7294);t.Z=function(e){var t=e.children,r=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",hidden:r,className:a},t)}},5064:function(e,t,r){"use strict";r.d(t,{Z:function(){return c}});var i=r(7294),a=r(9443);var n=function(){var e=(0,i.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=r(6010),s="tabItem_vU9c",l="tabItemActive_cw6a";var c=function(e){var t,r=e.lazy,a=e.block,c=e.defaultValue,u=e.values,d=e.groupId,p=e.className,g=i.Children.toArray(e.children),m=null!=u?u:g.map((function(e){return{value:e.props.value,label:e.props.label}})),f=null!=c?c:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value,v=n(),b=v.tabGroupChoices,h=v.setTabGroupChoices,y=(0,i.useState)(f),k=y[0],T=y[1],w=[];if(null!=d){var C=b[d];null!=C&&C!==k&&m.some((function(e){return e.value===C}))&&T(C)}var N=function(e){var t=e.currentTarget,r=w.indexOf(t),i=m[r].value;T(i),null!=d&&(h(d,i),setTimeout((function(){var e,r,i,a,n,o,s,c;(e=t.getBoundingClientRect(),r=e.top,i=e.left,a=e.bottom,n=e.right,o=window,s=o.innerHeight,c=o.innerWidth,r>=0&&n<=c&&a<=s&&i>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},I=function(e){var t,r=null;switch(e.key){case"ArrowRight":var i=w.indexOf(e.target)+1;r=w[i]||w[0];break;case"ArrowLeft":var a=w.indexOf(e.target)-1;r=w[a]||w[w.length-1]}null==(t=r)||t.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},p)},m.map((function(e){var t=e.value,r=e.label;return i.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,o.Z)("tabs__item",s,{"tabs__item--active":k===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:I,onFocus:N,onClick:N},null!=r?r:t)}))),r?(0,i.cloneElement)(g.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},6679:function(e){e.exports={docsSidebar:["introduction",{type:"category",label:"Tour",items:["tour/introduction","tour/startup_siren_server","tour/registering_provider","tour/registering_receivers","tour/sending_notifications_to_receiver","tour/configuring_provider_alerting_rules","tour/subscribing_notifications"]},{type:"category",label:"Concepts",items:["concepts/overview","concepts/plugin","concepts/schema"]},{type:"category",label:"Guides",items:["guides/overview","guides/provider_and_namespace","guides/receiver","guides/subscription","guides/rule","guides/template","guides/alert_history","guides/notification","guides/deployment"]},{type:"category",label:"Contribute",items:["contribute/contribution","contribute/receiver","contribute/provider","contribute/release"]},{type:"category",label:"Reference",items:["reference/api","reference/server_configuration","reference/client_configuration","reference/receiver","reference/cli"]}]}},8814:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return g},metadata:function(){return m},toc:function(){return f},apiVersion:function(){return v},defaultHost:function(){return b},default:function(){return y}});var i=r(7462),a=r(3366),n=(r(7294),r(3905)),o=r(5064),s=r(8215),l=r(6213),c=r(1410),u=r.n(c),d=["components"],p={},g="Receiver",m={unversionedId:"guides/receiver",id:"guides/receiver",isDocsHomePage:!1,title:"Receiver",description:"export const apiVersion = siteConfig.customFields.apiVersion",source:"@site/docs/guides/receiver.md",sourceDirName:"guides",slug:"/guides/receiver",permalink:"/siren/docs/guides/receiver",editUrl:"https://github.com/odpf/siren/edit/master/docs/docs/guides/receiver.md",tags:[],version:"current",lastUpdatedBy:"Ravi Suhag",lastUpdatedAt:1666359878,formattedLastUpdatedAt:"10/21/2022",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Provider and Namespace",permalink:"/siren/docs/guides/provider_and_namespace"},next:{title:"Subscription",permalink:"/siren/docs/guides/subscription"}},f=[{value:"Create a Receiver",id:"create-a-receiver",children:[]},{value:"Update a Receiver",id:"update-a-receiver",children:[]},{value:"Getting a receiver",id:"getting-a-receiver",children:[]},{value:"Getting all receivers",id:"getting-all-receivers",children:[]},{value:"Deleting a receiver",id:"deleting-a-receiver",children:[]},{value:"CLI Interface",id:"cli-interface",children:[]}],v=u().customFields.apiVersion,b=u().customFields.defaultHost,h={toc:f,apiVersion:v};function y(e){var t=e.components,r=(0,a.Z)(e,d);return(0,n.kt)("wrapper",(0,i.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"receiver"},"Receiver"),(0,n.kt)("p",null,"You can use receivers to send notifications on demand as well as on certain matching conditions (API for this is in the roadmap). Subscriptions use receivers to define routing configuration in Siren. With Siren subscriptions, incoming alerts via webhook will be routed to the pre-registered receivers by matching the subscriptions label. More info about notification concept is ",(0,n.kt)("a",{parentName:"p",href:"/siren/docs/concepts/notification"},"here"),". The how-to sending notification can be found ",(0,n.kt)("a",{parentName:"p",href:"/siren/docs/guides/notification"},"here"),"."),(0,n.kt)("h3",{id:"create-a-receiver"},"Create a Receiver"),(0,n.kt)("p",null,"Each receiver type might require different kind of configurations. A ",(0,n.kt)("inlineCode",{parentName:"p"},"configurations")," field is a dynamic field that has to be filled depend on the receiver type. Below is the example to add a ",(0,n.kt)("a",{parentName:"p",href:"#pagerduty"},"PagerDuty")," receiver. A ",(0,n.kt)("inlineCode",{parentName:"p"},"labels")," field is a KV-string value to label each receiver."),(0,n.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren receiver create --file receiver.yaml\n"))),(0,n.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,n.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request POST\n  --url ",b,"/",v,'/receivers\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "doc-pagerduty-receiver",\n    "type": "pagerduty",\n    "labels": {\n        "team": "siren-devs"\n    },\n    "configurations": {\n        "service_key": "eq23r23rfewf3qwf3wf3w2f23wf32qwfw3fw3"\n    }\n}\''))),(0,n.kt)("h3",{id:"update-a-receiver"},"Update a Receiver"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," While updating a receiver, you will have to make sure all subscriptions that are using this receivers get refreshed(updated), since subscriptions use receivers to create routing configuration dynamically. Receiver type is immutable."),(0,n.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren receiver edit --id 61 --file receiver.yaml\n"))),(0,n.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,n.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request PUT\n  --url ",b,"/",v,'/receivers/61\n  --header \'content-type: application/json\'\n  --data-raw \'{\n    "name": "doc-http-receiver",\n    "type": "http",\n    "labels": {\n        "team": "siren-devs"\n    },\n    "configurations": {\n        "url": "http://localhost:4001"\n    }\n}\''))),(0,n.kt)("h3",{id:"getting-a-receiver"},"Getting a receiver"),(0,n.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren receiver view 61\n"))),(0,n.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,n.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET --url ",b,"/",v,"/receivers/61"))),(0,n.kt)("h3",{id:"getting-all-receivers"},"Getting all receivers"),(0,n.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren receiver list\n"))),(0,n.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,n.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request GET --url ",b,"/",v,"/receivers"))),(0,n.kt)("h3",{id:"deleting-a-receiver"},"Deleting a receiver"),(0,n.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ siren receiver delete 61\n"))),(0,n.kt)(s.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,n.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"$ curl --request DELETE --url ",b,"/",v,"/receivers/61"))),(0,n.kt)("h2",{id:"cli-interface"},"CLI Interface"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},'Receivers are the medium to send notification for which we intend to mange configuration.\n\n\nUsage\n  siren receiver [flags]\n\nCore commands\n  create         Create a new receiver\n  delete         Delete a receiver details\n  edit           Edit a receiver\n  list           List receivers\n  send           Send a receiver notification\n  view           View a receiver details\n\nFlags\n  -h, --host string   Siren API service to connect to\nUse "siren receiver [command] --help" for more information about a command.\n')))}y.isMDXComponent=!0},3618:function(e,t,r){"use strict";r.r(t);t.default={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},7694:function(e,t,r){"use strict";r.r(t);t.default={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);